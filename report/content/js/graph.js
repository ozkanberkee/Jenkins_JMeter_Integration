/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 1001.0, "series": [{"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 21.0], [0.9, 21.0], [1.0, 21.0], [1.1, 21.0], [1.2, 21.0], [1.3, 21.0], [1.4, 21.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 30.0], [2.1, 30.0], [2.2, 43.0], [2.3, 43.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 59.0], [3.1, 59.0], [3.2, 59.0], [3.3, 59.0], [3.4, 59.0], [3.5, 59.0], [3.6, 59.0], [3.7, 64.0], [3.8, 64.0], [3.9, 64.0], [4.0, 64.0], [4.1, 64.0], [4.2, 64.0], [4.3, 64.0], [4.4, 75.0], [4.5, 75.0], [4.6, 75.0], [4.7, 75.0], [4.8, 75.0], [4.9, 75.0], [5.0, 75.0], [5.1, 75.0], [5.2, 81.0], [5.3, 81.0], [5.4, 81.0], [5.5, 81.0], [5.6, 81.0], [5.7, 81.0], [5.8, 81.0], [5.9, 85.0], [6.0, 85.0], [6.1, 85.0], [6.2, 85.0], [6.3, 85.0], [6.4, 85.0], [6.5, 85.0], [6.6, 85.0], [6.7, 85.0], [6.8, 85.0], [6.9, 85.0], [7.0, 85.0], [7.1, 85.0], [7.2, 85.0], [7.3, 87.0], [7.4, 87.0], [7.5, 87.0], [7.6, 87.0], [7.7, 87.0], [7.8, 87.0], [7.9, 87.0], [8.0, 87.0], [8.1, 99.0], [8.2, 99.0], [8.3, 99.0], [8.4, 99.0], [8.5, 99.0], [8.6, 99.0], [8.7, 99.0], [8.8, 103.0], [8.9, 103.0], [9.0, 103.0], [9.1, 103.0], [9.2, 103.0], [9.3, 103.0], [9.4, 103.0], [9.5, 134.0], [9.6, 134.0], [9.7, 134.0], [9.8, 134.0], [9.9, 134.0], [10.0, 134.0], [10.1, 134.0], [10.2, 134.0], [10.3, 140.0], [10.4, 140.0], [10.5, 140.0], [10.6, 140.0], [10.7, 140.0], [10.8, 140.0], [10.9, 140.0], [11.0, 141.0], [11.1, 141.0], [11.2, 141.0], [11.3, 141.0], [11.4, 141.0], [11.5, 141.0], [11.6, 141.0], [11.7, 142.0], [11.8, 142.0], [11.9, 142.0], [12.0, 142.0], [12.1, 142.0], [12.2, 142.0], [12.3, 142.0], [12.4, 142.0], [12.5, 143.0], [12.6, 143.0], [12.7, 143.0], [12.8, 143.0], [12.9, 143.0], [13.0, 143.0], [13.1, 143.0], [13.2, 151.0], [13.3, 151.0], [13.4, 151.0], [13.5, 151.0], [13.6, 151.0], [13.7, 151.0], [13.8, 151.0], [13.9, 158.0], [14.0, 158.0], [14.1, 158.0], [14.2, 158.0], [14.3, 158.0], [14.4, 158.0], [14.5, 158.0], [14.6, 168.0], [14.7, 168.0], [14.8, 168.0], [14.9, 168.0], [15.0, 168.0], [15.1, 168.0], [15.2, 168.0], [15.3, 168.0], [15.4, 169.0], [15.5, 169.0], [15.6, 169.0], [15.7, 169.0], [15.8, 169.0], [15.9, 169.0], [16.0, 169.0], [16.1, 183.0], [16.2, 183.0], [16.3, 183.0], [16.4, 183.0], [16.5, 183.0], [16.6, 183.0], [16.7, 183.0], [16.8, 194.0], [16.9, 194.0], [17.0, 194.0], [17.1, 194.0], [17.2, 194.0], [17.3, 194.0], [17.4, 194.0], [17.5, 194.0], [17.6, 199.0], [17.7, 199.0], [17.8, 199.0], [17.9, 199.0], [18.0, 199.0], [18.1, 199.0], [18.2, 199.0], [18.3, 201.0], [18.4, 201.0], [18.5, 201.0], [18.6, 201.0], [18.7, 201.0], [18.8, 201.0], [18.9, 201.0], [19.0, 214.0], [19.1, 214.0], [19.2, 214.0], [19.3, 214.0], [19.4, 214.0], [19.5, 214.0], [19.6, 214.0], [19.7, 214.0], [19.8, 214.0], [19.9, 214.0], [20.0, 214.0], [20.1, 214.0], [20.2, 214.0], [20.3, 214.0], [20.4, 214.0], [20.5, 217.0], [20.6, 217.0], [20.7, 217.0], [20.8, 217.0], [20.9, 217.0], [21.0, 217.0], [21.1, 217.0], [21.2, 219.0], [21.3, 219.0], [21.4, 219.0], [21.5, 219.0], [21.6, 219.0], [21.7, 219.0], [21.8, 219.0], [21.9, 229.0], [22.0, 229.0], [22.1, 229.0], [22.2, 229.0], [22.3, 229.0], [22.4, 229.0], [22.5, 229.0], [22.6, 229.0], [22.7, 235.0], [22.8, 235.0], [22.9, 235.0], [23.0, 235.0], [23.1, 235.0], [23.2, 235.0], [23.3, 235.0], [23.4, 242.0], [23.5, 242.0], [23.6, 242.0], [23.7, 242.0], [23.8, 242.0], [23.9, 242.0], [24.0, 242.0], [24.1, 246.0], [24.2, 246.0], [24.3, 246.0], [24.4, 246.0], [24.5, 246.0], [24.6, 246.0], [24.7, 246.0], [24.8, 246.0], [24.9, 249.0], [25.0, 249.0], [25.1, 249.0], [25.2, 249.0], [25.3, 249.0], [25.4, 249.0], [25.5, 249.0], [25.6, 274.0], [25.7, 274.0], [25.8, 274.0], [25.9, 274.0], [26.0, 274.0], [26.1, 274.0], [26.2, 274.0], [26.3, 275.0], [26.4, 275.0], [26.5, 275.0], [26.6, 275.0], [26.7, 275.0], [26.8, 275.0], [26.9, 275.0], [27.0, 275.0], [27.1, 291.0], [27.2, 291.0], [27.3, 291.0], [27.4, 291.0], [27.5, 291.0], [27.6, 291.0], [27.7, 291.0], [27.8, 291.0], [27.9, 291.0], [28.0, 291.0], [28.1, 291.0], [28.2, 291.0], [28.3, 291.0], [28.4, 291.0], [28.5, 296.0], [28.6, 296.0], [28.7, 296.0], [28.8, 296.0], [28.9, 296.0], [29.0, 296.0], [29.1, 296.0], [29.2, 310.0], [29.3, 310.0], [29.4, 310.0], [29.5, 310.0], [29.6, 310.0], [29.7, 310.0], [29.8, 310.0], [29.9, 310.0], [30.0, 326.0], [30.1, 326.0], [30.2, 326.0], [30.3, 326.0], [30.4, 326.0], [30.5, 326.0], [30.6, 326.0], [30.7, 328.0], [30.8, 328.0], [30.9, 328.0], [31.0, 328.0], [31.1, 328.0], [31.2, 328.0], [31.3, 328.0], [31.4, 330.0], [31.5, 330.0], [31.6, 330.0], [31.7, 330.0], [31.8, 330.0], [31.9, 330.0], [32.0, 330.0], [32.1, 330.0], [32.2, 337.0], [32.3, 337.0], [32.4, 337.0], [32.5, 337.0], [32.6, 337.0], [32.7, 337.0], [32.8, 337.0], [32.9, 338.0], [33.0, 338.0], [33.1, 338.0], [33.2, 338.0], [33.3, 338.0], [33.4, 338.0], [33.5, 338.0], [33.6, 351.0], [33.7, 351.0], [33.8, 351.0], [33.9, 351.0], [34.0, 351.0], [34.1, 351.0], [34.2, 351.0], [34.3, 351.0], [34.4, 357.0], [34.5, 357.0], [34.6, 357.0], [34.7, 357.0], [34.8, 357.0], [34.9, 357.0], [35.0, 357.0], [35.1, 359.0], [35.2, 359.0], [35.3, 359.0], [35.4, 359.0], [35.5, 359.0], [35.6, 359.0], [35.7, 359.0], [35.8, 360.0], [35.9, 360.0], [36.0, 360.0], [36.1, 360.0], [36.2, 360.0], [36.3, 360.0], [36.4, 360.0], [36.5, 381.0], [36.6, 381.0], [36.7, 381.0], [36.8, 381.0], [36.9, 381.0], [37.0, 381.0], [37.1, 381.0], [37.2, 381.0], [37.3, 397.0], [37.4, 397.0], [37.5, 397.0], [37.6, 397.0], [37.7, 397.0], [37.8, 397.0], [37.9, 397.0], [38.0, 405.0], [38.1, 405.0], [38.2, 405.0], [38.3, 405.0], [38.4, 405.0], [38.5, 405.0], [38.6, 405.0], [38.7, 406.0], [38.8, 406.0], [38.9, 406.0], [39.0, 406.0], [39.1, 406.0], [39.2, 406.0], [39.3, 406.0], [39.4, 406.0], [39.5, 410.0], [39.6, 410.0], [39.7, 410.0], [39.8, 410.0], [39.9, 410.0], [40.0, 410.0], [40.1, 410.0], [40.2, 415.0], [40.3, 415.0], [40.4, 415.0], [40.5, 415.0], [40.6, 415.0], [40.7, 415.0], [40.8, 415.0], [40.9, 416.0], [41.0, 416.0], [41.1, 416.0], [41.2, 416.0], [41.3, 416.0], [41.4, 416.0], [41.5, 416.0], [41.6, 416.0], [41.7, 418.0], [41.8, 418.0], [41.9, 418.0], [42.0, 418.0], [42.1, 418.0], [42.2, 418.0], [42.3, 418.0], [42.4, 421.0], [42.5, 421.0], [42.6, 421.0], [42.7, 421.0], [42.8, 421.0], [42.9, 421.0], [43.0, 421.0], [43.1, 443.0], [43.2, 443.0], [43.3, 443.0], [43.4, 443.0], [43.5, 443.0], [43.6, 443.0], [43.7, 443.0], [43.8, 445.0], [43.9, 445.0], [44.0, 445.0], [44.1, 445.0], [44.2, 445.0], [44.3, 445.0], [44.4, 445.0], [44.5, 445.0], [44.6, 459.0], [44.7, 459.0], [44.8, 459.0], [44.9, 459.0], [45.0, 459.0], [45.1, 459.0], [45.2, 459.0], [45.3, 460.0], [45.4, 460.0], [45.5, 460.0], [45.6, 460.0], [45.7, 460.0], [45.8, 460.0], [45.9, 460.0], [46.0, 463.0], [46.1, 463.0], [46.2, 463.0], [46.3, 463.0], [46.4, 463.0], [46.5, 463.0], [46.6, 463.0], [46.7, 463.0], [46.8, 466.0], [46.9, 466.0], [47.0, 466.0], [47.1, 466.0], [47.2, 466.0], [47.3, 466.0], [47.4, 466.0], [47.5, 467.0], [47.6, 467.0], [47.7, 467.0], [47.8, 467.0], [47.9, 467.0], [48.0, 467.0], [48.1, 467.0], [48.2, 468.0], [48.3, 468.0], [48.4, 468.0], [48.5, 468.0], [48.6, 468.0], [48.7, 468.0], [48.8, 468.0], [48.9, 468.0], [49.0, 477.0], [49.1, 477.0], [49.2, 477.0], [49.3, 477.0], [49.4, 477.0], [49.5, 477.0], [49.6, 477.0], [49.7, 485.0], [49.8, 485.0], [49.9, 485.0], [50.0, 485.0], [50.1, 485.0], [50.2, 485.0], [50.3, 485.0], [50.4, 487.0], [50.5, 487.0], [50.6, 487.0], [50.7, 487.0], [50.8, 487.0], [50.9, 487.0], [51.0, 487.0], [51.1, 489.0], [51.2, 489.0], [51.3, 489.0], [51.4, 489.0], [51.5, 489.0], [51.6, 489.0], [51.7, 489.0], [51.8, 489.0], [51.9, 510.0], [52.0, 510.0], [52.1, 510.0], [52.2, 510.0], [52.3, 510.0], [52.4, 510.0], [52.5, 510.0], [52.6, 515.0], [52.7, 515.0], [52.8, 515.0], [52.9, 515.0], [53.0, 515.0], [53.1, 515.0], [53.2, 515.0], [53.3, 517.0], [53.4, 517.0], [53.5, 517.0], [53.6, 517.0], [53.7, 517.0], [53.8, 517.0], [53.9, 517.0], [54.0, 517.0], [54.1, 575.0], [54.2, 575.0], [54.3, 575.0], [54.4, 575.0], [54.5, 575.0], [54.6, 575.0], [54.7, 575.0], [54.8, 575.0], [54.9, 575.0], [55.0, 575.0], [55.1, 575.0], [55.2, 575.0], [55.3, 575.0], [55.4, 575.0], [55.5, 582.0], [55.6, 582.0], [55.7, 582.0], [55.8, 582.0], [55.9, 582.0], [56.0, 582.0], [56.1, 582.0], [56.2, 582.0], [56.3, 584.0], [56.4, 584.0], [56.5, 584.0], [56.6, 584.0], [56.7, 584.0], [56.8, 584.0], [56.9, 584.0], [57.0, 587.0], [57.1, 587.0], [57.2, 587.0], [57.3, 587.0], [57.4, 587.0], [57.5, 587.0], [57.6, 587.0], [57.7, 590.0], [57.8, 590.0], [57.9, 590.0], [58.0, 590.0], [58.1, 590.0], [58.2, 590.0], [58.3, 590.0], [58.4, 592.0], [58.5, 592.0], [58.6, 592.0], [58.7, 592.0], [58.8, 592.0], [58.9, 592.0], [59.0, 592.0], [59.1, 592.0], [59.2, 599.0], [59.3, 599.0], [59.4, 599.0], [59.5, 599.0], [59.6, 599.0], [59.7, 599.0], [59.8, 599.0], [59.9, 608.0], [60.0, 608.0], [60.1, 608.0], [60.2, 608.0], [60.3, 608.0], [60.4, 608.0], [60.5, 608.0], [60.6, 615.0], [60.7, 615.0], [60.8, 615.0], [60.9, 615.0], [61.0, 615.0], [61.1, 615.0], [61.2, 615.0], [61.3, 615.0], [61.4, 617.0], [61.5, 617.0], [61.6, 617.0], [61.7, 617.0], [61.8, 617.0], [61.9, 617.0], [62.0, 617.0], [62.1, 624.0], [62.2, 624.0], [62.3, 624.0], [62.4, 624.0], [62.5, 624.0], [62.6, 624.0], [62.7, 624.0], [62.8, 626.0], [62.9, 626.0], [63.0, 626.0], [63.1, 626.0], [63.2, 626.0], [63.3, 626.0], [63.4, 626.0], [63.5, 626.0], [63.6, 630.0], [63.7, 630.0], [63.8, 630.0], [63.9, 630.0], [64.0, 630.0], [64.1, 630.0], [64.2, 630.0], [64.3, 635.0], [64.4, 635.0], [64.5, 635.0], [64.6, 635.0], [64.7, 635.0], [64.8, 635.0], [64.9, 635.0], [65.0, 643.0], [65.1, 643.0], [65.2, 643.0], [65.3, 643.0], [65.4, 643.0], [65.5, 643.0], [65.6, 643.0], [65.7, 644.0], [65.8, 644.0], [65.9, 644.0], [66.0, 644.0], [66.1, 644.0], [66.2, 644.0], [66.3, 644.0], [66.4, 644.0], [66.5, 663.0], [66.6, 663.0], [66.7, 663.0], [66.8, 663.0], [66.9, 663.0], [67.0, 663.0], [67.1, 663.0], [67.2, 666.0], [67.3, 666.0], [67.4, 666.0], [67.5, 666.0], [67.6, 666.0], [67.7, 666.0], [67.8, 666.0], [67.9, 668.0], [68.0, 668.0], [68.1, 668.0], [68.2, 668.0], [68.3, 668.0], [68.4, 668.0], [68.5, 668.0], [68.6, 668.0], [68.7, 670.0], [68.8, 670.0], [68.9, 670.0], [69.0, 670.0], [69.1, 670.0], [69.2, 670.0], [69.3, 670.0], [69.4, 674.0], [69.5, 674.0], [69.6, 674.0], [69.7, 674.0], [69.8, 674.0], [69.9, 674.0], [70.0, 674.0], [70.1, 683.0], [70.2, 683.0], [70.3, 683.0], [70.4, 683.0], [70.5, 683.0], [70.6, 683.0], [70.7, 683.0], [70.8, 683.0], [70.9, 691.0], [71.0, 691.0], [71.1, 691.0], [71.2, 691.0], [71.3, 691.0], [71.4, 691.0], [71.5, 691.0], [71.6, 693.0], [71.7, 693.0], [71.8, 693.0], [71.9, 693.0], [72.0, 693.0], [72.1, 693.0], [72.2, 693.0], [72.3, 705.0], [72.4, 705.0], [72.5, 705.0], [72.6, 705.0], [72.7, 705.0], [72.8, 705.0], [72.9, 705.0], [73.0, 740.0], [73.1, 740.0], [73.2, 740.0], [73.3, 740.0], [73.4, 740.0], [73.5, 740.0], [73.6, 740.0], [73.7, 740.0], [73.8, 760.0], [73.9, 760.0], [74.0, 760.0], [74.1, 760.0], [74.2, 760.0], [74.3, 760.0], [74.4, 760.0], [74.5, 771.0], [74.6, 771.0], [74.7, 771.0], [74.8, 771.0], [74.9, 771.0], [75.0, 771.0], [75.1, 771.0], [75.2, 784.0], [75.3, 784.0], [75.4, 784.0], [75.5, 784.0], [75.6, 784.0], [75.7, 784.0], [75.8, 784.0], [75.9, 784.0], [76.0, 790.0], [76.1, 790.0], [76.2, 790.0], [76.3, 790.0], [76.4, 790.0], [76.5, 790.0], [76.6, 790.0], [76.7, 794.0], [76.8, 794.0], [76.9, 794.0], [77.0, 794.0], [77.1, 794.0], [77.2, 794.0], [77.3, 794.0], [77.4, 799.0], [77.5, 799.0], [77.6, 799.0], [77.7, 799.0], [77.8, 799.0], [77.9, 799.0], [78.0, 799.0], [78.1, 799.0], [78.2, 800.0], [78.3, 800.0], [78.4, 800.0], [78.5, 800.0], [78.6, 800.0], [78.7, 800.0], [78.8, 800.0], [78.9, 803.0], [79.0, 803.0], [79.1, 803.0], [79.2, 803.0], [79.3, 803.0], [79.4, 803.0], [79.5, 803.0], [79.6, 808.0], [79.7, 808.0], [79.8, 808.0], [79.9, 808.0], [80.0, 808.0], [80.1, 808.0], [80.2, 808.0], [80.3, 837.0], [80.4, 837.0], [80.5, 837.0], [80.6, 837.0], [80.7, 837.0], [80.8, 837.0], [80.9, 837.0], [81.0, 837.0], [81.1, 840.0], [81.2, 840.0], [81.3, 840.0], [81.4, 840.0], [81.5, 840.0], [81.6, 840.0], [81.7, 840.0], [81.8, 848.0], [81.9, 848.0], [82.0, 848.0], [82.1, 848.0], [82.2, 848.0], [82.3, 848.0], [82.4, 848.0], [82.5, 850.0], [82.6, 850.0], [82.7, 850.0], [82.8, 850.0], [82.9, 850.0], [83.0, 850.0], [83.1, 850.0], [83.2, 850.0], [83.3, 852.0], [83.4, 852.0], [83.5, 852.0], [83.6, 852.0], [83.7, 852.0], [83.8, 852.0], [83.9, 852.0], [84.0, 858.0], [84.1, 858.0], [84.2, 858.0], [84.3, 858.0], [84.4, 858.0], [84.5, 858.0], [84.6, 858.0], [84.7, 859.0], [84.8, 859.0], [84.9, 859.0], [85.0, 859.0], [85.1, 859.0], [85.2, 859.0], [85.3, 859.0], [85.4, 859.0], [85.5, 862.0], [85.6, 862.0], [85.7, 862.0], [85.8, 862.0], [85.9, 862.0], [86.0, 862.0], [86.1, 862.0], [86.2, 862.0], [86.3, 862.0], [86.4, 862.0], [86.5, 862.0], [86.6, 862.0], [86.7, 862.0], [86.8, 862.0], [86.9, 872.0], [87.0, 872.0], [87.1, 872.0], [87.2, 872.0], [87.3, 872.0], [87.4, 872.0], [87.5, 872.0], [87.6, 875.0], [87.7, 875.0], [87.8, 875.0], [87.9, 875.0], [88.0, 875.0], [88.1, 875.0], [88.2, 875.0], [88.3, 875.0], [88.4, 878.0], [88.5, 878.0], [88.6, 878.0], [88.7, 878.0], [88.8, 878.0], [88.9, 878.0], [89.0, 878.0], [89.1, 882.0], [89.2, 882.0], [89.3, 882.0], [89.4, 882.0], [89.5, 882.0], [89.6, 882.0], [89.7, 882.0], [89.8, 890.0], [89.9, 890.0], [90.0, 890.0], [90.1, 890.0], [90.2, 890.0], [90.3, 890.0], [90.4, 890.0], [90.5, 890.0], [90.6, 900.0], [90.7, 900.0], [90.8, 900.0], [90.9, 900.0], [91.0, 900.0], [91.1, 900.0], [91.2, 900.0], [91.3, 902.0], [91.4, 902.0], [91.5, 902.0], [91.6, 902.0], [91.7, 902.0], [91.8, 902.0], [91.9, 902.0], [92.0, 903.0], [92.1, 903.0], [92.2, 903.0], [92.3, 903.0], [92.4, 903.0], [92.5, 903.0], [92.6, 903.0], [92.7, 903.0], [92.8, 910.0], [92.9, 910.0], [93.0, 910.0], [93.1, 910.0], [93.2, 910.0], [93.3, 910.0], [93.4, 910.0], [93.5, 933.0], [93.6, 933.0], [93.7, 933.0], [93.8, 933.0], [93.9, 933.0], [94.0, 933.0], [94.1, 933.0], [94.2, 944.0], [94.3, 944.0], [94.4, 944.0], [94.5, 944.0], [94.6, 944.0], [94.7, 944.0], [94.8, 944.0], [94.9, 959.0], [95.0, 959.0], [95.1, 959.0], [95.2, 959.0], [95.3, 959.0], [95.4, 959.0], [95.5, 959.0], [95.6, 959.0], [95.7, 960.0], [95.8, 960.0], [95.9, 960.0], [96.0, 960.0], [96.1, 960.0], [96.2, 960.0], [96.3, 960.0], [96.4, 983.0], [96.5, 983.0], [96.6, 983.0], [96.7, 983.0], [96.8, 983.0], [96.9, 983.0], [97.0, 983.0], [97.1, 987.0], [97.2, 987.0], [97.3, 987.0], [97.4, 987.0], [97.5, 987.0], [97.6, 987.0], [97.7, 987.0], [97.8, 987.0], [97.9, 992.0], [98.0, 992.0], [98.1, 992.0], [98.2, 992.0], [98.3, 992.0], [98.4, 992.0], [98.5, 992.0], [98.6, 995.0], [98.7, 995.0], [98.8, 995.0], [98.9, 995.0], [99.0, 995.0], [99.1, 995.0], [99.2, 995.0], [99.3, 995.0], [99.4, 995.0], [99.5, 995.0], [99.6, 995.0], [99.7, 995.0], [99.8, 995.0], [99.9, 995.0]], "isOverall": false, "label": "T02_Load", "isController": false}, {"data": [[0.0, 22.0], [0.1, 22.0], [0.2, 22.0], [0.3, 22.0], [0.4, 22.0], [0.5, 22.0], [0.6, 22.0], [0.7, 22.0], [0.8, 24.0], [0.9, 24.0], [1.0, 24.0], [1.1, 24.0], [1.2, 24.0], [1.3, 24.0], [1.4, 24.0], [1.5, 28.0], [1.6, 28.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 28.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 43.0], [3.5, 43.0], [3.6, 49.0], [3.7, 49.0], [3.8, 49.0], [3.9, 49.0], [4.0, 49.0], [4.1, 49.0], [4.2, 49.0], [4.3, 81.0], [4.4, 81.0], [4.5, 81.0], [4.6, 81.0], [4.7, 81.0], [4.8, 81.0], [4.9, 81.0], [5.0, 83.0], [5.1, 83.0], [5.2, 83.0], [5.3, 83.0], [5.4, 83.0], [5.5, 83.0], [5.6, 83.0], [5.7, 107.0], [5.8, 107.0], [5.9, 107.0], [6.0, 107.0], [6.1, 107.0], [6.2, 107.0], [6.3, 107.0], [6.4, 107.0], [6.5, 107.0], [6.6, 107.0], [6.7, 107.0], [6.8, 107.0], [6.9, 107.0], [7.0, 107.0], [7.1, 109.0], [7.2, 109.0], [7.3, 109.0], [7.4, 109.0], [7.5, 109.0], [7.6, 109.0], [7.7, 109.0], [7.8, 109.0], [7.9, 114.0], [8.0, 114.0], [8.1, 114.0], [8.2, 114.0], [8.3, 114.0], [8.4, 114.0], [8.5, 114.0], [8.6, 114.0], [8.7, 114.0], [8.8, 114.0], [8.9, 114.0], [9.0, 114.0], [9.1, 114.0], [9.2, 114.0], [9.3, 123.0], [9.4, 123.0], [9.5, 123.0], [9.6, 123.0], [9.7, 123.0], [9.8, 123.0], [9.9, 123.0], [10.0, 123.0], [10.1, 123.0], [10.2, 123.0], [10.3, 123.0], [10.4, 123.0], [10.5, 123.0], [10.6, 123.0], [10.7, 133.0], [10.8, 133.0], [10.9, 133.0], [11.0, 133.0], [11.1, 133.0], [11.2, 133.0], [11.3, 133.0], [11.4, 141.0], [11.5, 141.0], [11.6, 141.0], [11.7, 141.0], [11.8, 141.0], [11.9, 141.0], [12.0, 141.0], [12.1, 144.0], [12.2, 144.0], [12.3, 144.0], [12.4, 144.0], [12.5, 144.0], [12.6, 144.0], [12.7, 144.0], [12.8, 144.0], [12.9, 144.0], [13.0, 144.0], [13.1, 144.0], [13.2, 144.0], [13.3, 144.0], [13.4, 144.0], [13.5, 149.0], [13.6, 149.0], [13.7, 149.0], [13.8, 149.0], [13.9, 149.0], [14.0, 149.0], [14.1, 149.0], [14.2, 156.0], [14.3, 156.0], [14.4, 156.0], [14.5, 156.0], [14.6, 156.0], [14.7, 156.0], [14.8, 156.0], [14.9, 156.0], [15.0, 156.0], [15.1, 156.0], [15.2, 156.0], [15.3, 156.0], [15.4, 156.0], [15.5, 156.0], [15.6, 156.0], [15.7, 167.0], [15.8, 167.0], [15.9, 167.0], [16.0, 167.0], [16.1, 167.0], [16.2, 167.0], [16.3, 167.0], [16.4, 172.0], [16.5, 172.0], [16.6, 172.0], [16.7, 172.0], [16.8, 172.0], [16.9, 172.0], [17.0, 172.0], [17.1, 173.0], [17.2, 173.0], [17.3, 173.0], [17.4, 173.0], [17.5, 173.0], [17.6, 173.0], [17.7, 173.0], [17.8, 175.0], [17.9, 175.0], [18.0, 175.0], [18.1, 175.0], [18.2, 175.0], [18.3, 175.0], [18.4, 175.0], [18.5, 190.0], [18.6, 190.0], [18.7, 190.0], [18.8, 190.0], [18.9, 190.0], [19.0, 190.0], [19.1, 190.0], [19.2, 191.0], [19.3, 191.0], [19.4, 191.0], [19.5, 191.0], [19.6, 191.0], [19.7, 191.0], [19.8, 191.0], [19.9, 201.0], [20.0, 201.0], [20.1, 201.0], [20.2, 201.0], [20.3, 201.0], [20.4, 201.0], [20.5, 201.0], [20.6, 205.0], [20.7, 205.0], [20.8, 205.0], [20.9, 205.0], [21.0, 205.0], [21.1, 205.0], [21.2, 205.0], [21.3, 237.0], [21.4, 237.0], [21.5, 237.0], [21.6, 237.0], [21.7, 237.0], [21.8, 237.0], [21.9, 237.0], [22.0, 246.0], [22.1, 246.0], [22.2, 246.0], [22.3, 246.0], [22.4, 246.0], [22.5, 246.0], [22.6, 246.0], [22.7, 255.0], [22.8, 255.0], [22.9, 255.0], [23.0, 255.0], [23.1, 255.0], [23.2, 255.0], [23.3, 255.0], [23.4, 255.0], [23.5, 258.0], [23.6, 258.0], [23.7, 258.0], [23.8, 258.0], [23.9, 258.0], [24.0, 258.0], [24.1, 258.0], [24.2, 272.0], [24.3, 272.0], [24.4, 272.0], [24.5, 272.0], [24.6, 272.0], [24.7, 272.0], [24.8, 272.0], [24.9, 277.0], [25.0, 277.0], [25.1, 277.0], [25.2, 277.0], [25.3, 277.0], [25.4, 277.0], [25.5, 277.0], [25.6, 280.0], [25.7, 280.0], [25.8, 280.0], [25.9, 280.0], [26.0, 280.0], [26.1, 280.0], [26.2, 280.0], [26.3, 282.0], [26.4, 282.0], [26.5, 282.0], [26.6, 282.0], [26.7, 282.0], [26.8, 282.0], [26.9, 282.0], [27.0, 284.0], [27.1, 284.0], [27.2, 284.0], [27.3, 284.0], [27.4, 284.0], [27.5, 284.0], [27.6, 284.0], [27.7, 302.0], [27.8, 302.0], [27.9, 302.0], [28.0, 302.0], [28.1, 302.0], [28.2, 302.0], [28.3, 302.0], [28.4, 315.0], [28.5, 315.0], [28.6, 315.0], [28.7, 315.0], [28.8, 315.0], [28.9, 315.0], [29.0, 315.0], [29.1, 323.0], [29.2, 323.0], [29.3, 323.0], [29.4, 323.0], [29.5, 323.0], [29.6, 323.0], [29.7, 323.0], [29.8, 339.0], [29.9, 339.0], [30.0, 339.0], [30.1, 339.0], [30.2, 339.0], [30.3, 339.0], [30.4, 339.0], [30.5, 360.0], [30.6, 360.0], [30.7, 360.0], [30.8, 360.0], [30.9, 360.0], [31.0, 360.0], [31.1, 360.0], [31.2, 360.0], [31.3, 373.0], [31.4, 373.0], [31.5, 373.0], [31.6, 373.0], [31.7, 373.0], [31.8, 373.0], [31.9, 373.0], [32.0, 373.0], [32.1, 373.0], [32.2, 373.0], [32.3, 373.0], [32.4, 373.0], [32.5, 373.0], [32.6, 373.0], [32.7, 374.0], [32.8, 374.0], [32.9, 374.0], [33.0, 374.0], [33.1, 374.0], [33.2, 374.0], [33.3, 374.0], [33.4, 375.0], [33.5, 375.0], [33.6, 375.0], [33.7, 375.0], [33.8, 375.0], [33.9, 375.0], [34.0, 375.0], [34.1, 377.0], [34.2, 377.0], [34.3, 377.0], [34.4, 377.0], [34.5, 377.0], [34.6, 377.0], [34.7, 377.0], [34.8, 382.0], [34.9, 382.0], [35.0, 382.0], [35.1, 382.0], [35.2, 382.0], [35.3, 382.0], [35.4, 382.0], [35.5, 392.0], [35.6, 392.0], [35.7, 392.0], [35.8, 392.0], [35.9, 392.0], [36.0, 392.0], [36.1, 392.0], [36.2, 401.0], [36.3, 401.0], [36.4, 401.0], [36.5, 401.0], [36.6, 401.0], [36.7, 401.0], [36.8, 401.0], [36.9, 402.0], [37.0, 402.0], [37.1, 402.0], [37.2, 402.0], [37.3, 402.0], [37.4, 402.0], [37.5, 402.0], [37.6, 424.0], [37.7, 424.0], [37.8, 424.0], [37.9, 424.0], [38.0, 424.0], [38.1, 424.0], [38.2, 424.0], [38.3, 425.0], [38.4, 425.0], [38.5, 425.0], [38.6, 425.0], [38.7, 425.0], [38.8, 425.0], [38.9, 425.0], [39.0, 425.0], [39.1, 427.0], [39.2, 427.0], [39.3, 427.0], [39.4, 427.0], [39.5, 427.0], [39.6, 427.0], [39.7, 427.0], [39.8, 437.0], [39.9, 437.0], [40.0, 437.0], [40.1, 437.0], [40.2, 437.0], [40.3, 437.0], [40.4, 437.0], [40.5, 440.0], [40.6, 440.0], [40.7, 440.0], [40.8, 440.0], [40.9, 440.0], [41.0, 440.0], [41.1, 440.0], [41.2, 446.0], [41.3, 446.0], [41.4, 446.0], [41.5, 446.0], [41.6, 446.0], [41.7, 446.0], [41.8, 446.0], [41.9, 459.0], [42.0, 459.0], [42.1, 459.0], [42.2, 459.0], [42.3, 459.0], [42.4, 459.0], [42.5, 459.0], [42.6, 464.0], [42.7, 464.0], [42.8, 464.0], [42.9, 464.0], [43.0, 464.0], [43.1, 464.0], [43.2, 464.0], [43.3, 464.0], [43.4, 464.0], [43.5, 464.0], [43.6, 464.0], [43.7, 464.0], [43.8, 464.0], [43.9, 464.0], [44.0, 479.0], [44.1, 479.0], [44.2, 479.0], [44.3, 479.0], [44.4, 479.0], [44.5, 479.0], [44.6, 479.0], [44.7, 484.0], [44.8, 484.0], [44.9, 484.0], [45.0, 484.0], [45.1, 484.0], [45.2, 484.0], [45.3, 484.0], [45.4, 487.0], [45.5, 487.0], [45.6, 487.0], [45.7, 487.0], [45.8, 487.0], [45.9, 487.0], [46.0, 487.0], [46.1, 490.0], [46.2, 490.0], [46.3, 490.0], [46.4, 490.0], [46.5, 490.0], [46.6, 490.0], [46.7, 490.0], [46.8, 490.0], [46.9, 493.0], [47.0, 493.0], [47.1, 493.0], [47.2, 493.0], [47.3, 493.0], [47.4, 493.0], [47.5, 493.0], [47.6, 497.0], [47.7, 497.0], [47.8, 497.0], [47.9, 497.0], [48.0, 497.0], [48.1, 497.0], [48.2, 497.0], [48.3, 516.0], [48.4, 516.0], [48.5, 516.0], [48.6, 516.0], [48.7, 516.0], [48.8, 516.0], [48.9, 516.0], [49.0, 546.0], [49.1, 546.0], [49.2, 546.0], [49.3, 546.0], [49.4, 546.0], [49.5, 546.0], [49.6, 546.0], [49.7, 547.0], [49.8, 547.0], [49.9, 547.0], [50.0, 547.0], [50.1, 547.0], [50.2, 547.0], [50.3, 547.0], [50.4, 549.0], [50.5, 549.0], [50.6, 549.0], [50.7, 549.0], [50.8, 549.0], [50.9, 549.0], [51.0, 549.0], [51.1, 552.0], [51.2, 552.0], [51.3, 552.0], [51.4, 552.0], [51.5, 552.0], [51.6, 552.0], [51.7, 552.0], [51.8, 556.0], [51.9, 556.0], [52.0, 556.0], [52.1, 556.0], [52.2, 556.0], [52.3, 556.0], [52.4, 556.0], [52.5, 559.0], [52.6, 559.0], [52.7, 559.0], [52.8, 559.0], [52.9, 559.0], [53.0, 559.0], [53.1, 559.0], [53.2, 561.0], [53.3, 561.0], [53.4, 561.0], [53.5, 561.0], [53.6, 561.0], [53.7, 561.0], [53.8, 561.0], [53.9, 561.0], [54.0, 569.0], [54.1, 569.0], [54.2, 569.0], [54.3, 569.0], [54.4, 569.0], [54.5, 569.0], [54.6, 569.0], [54.7, 571.0], [54.8, 571.0], [54.9, 571.0], [55.0, 571.0], [55.1, 571.0], [55.2, 571.0], [55.3, 571.0], [55.4, 574.0], [55.5, 574.0], [55.6, 574.0], [55.7, 574.0], [55.8, 574.0], [55.9, 574.0], [56.0, 574.0], [56.1, 583.0], [56.2, 583.0], [56.3, 583.0], [56.4, 583.0], [56.5, 583.0], [56.6, 583.0], [56.7, 583.0], [56.8, 588.0], [56.9, 588.0], [57.0, 588.0], [57.1, 588.0], [57.2, 588.0], [57.3, 588.0], [57.4, 588.0], [57.5, 608.0], [57.6, 608.0], [57.7, 608.0], [57.8, 608.0], [57.9, 608.0], [58.0, 608.0], [58.1, 608.0], [58.2, 616.0], [58.3, 616.0], [58.4, 616.0], [58.5, 616.0], [58.6, 616.0], [58.7, 616.0], [58.8, 616.0], [58.9, 629.0], [59.0, 629.0], [59.1, 629.0], [59.2, 629.0], [59.3, 629.0], [59.4, 629.0], [59.5, 629.0], [59.6, 633.0], [59.7, 633.0], [59.8, 633.0], [59.9, 633.0], [60.0, 633.0], [60.1, 633.0], [60.2, 633.0], [60.3, 634.0], [60.4, 634.0], [60.5, 634.0], [60.6, 634.0], [60.7, 634.0], [60.8, 634.0], [60.9, 634.0], [61.0, 649.0], [61.1, 649.0], [61.2, 649.0], [61.3, 649.0], [61.4, 649.0], [61.5, 649.0], [61.6, 649.0], [61.7, 649.0], [61.8, 649.0], [61.9, 649.0], [62.0, 649.0], [62.1, 649.0], [62.2, 649.0], [62.3, 649.0], [62.4, 649.0], [62.5, 650.0], [62.6, 650.0], [62.7, 650.0], [62.8, 650.0], [62.9, 650.0], [63.0, 650.0], [63.1, 650.0], [63.2, 653.0], [63.3, 653.0], [63.4, 653.0], [63.5, 653.0], [63.6, 653.0], [63.7, 653.0], [63.8, 653.0], [63.9, 673.0], [64.0, 673.0], [64.1, 673.0], [64.2, 673.0], [64.3, 673.0], [64.4, 673.0], [64.5, 673.0], [64.6, 680.0], [64.7, 680.0], [64.8, 680.0], [64.9, 680.0], [65.0, 680.0], [65.1, 680.0], [65.2, 680.0], [65.3, 681.0], [65.4, 681.0], [65.5, 681.0], [65.6, 681.0], [65.7, 681.0], [65.8, 681.0], [65.9, 681.0], [66.0, 699.0], [66.1, 699.0], [66.2, 699.0], [66.3, 699.0], [66.4, 699.0], [66.5, 699.0], [66.6, 699.0], [66.7, 704.0], [66.8, 704.0], [66.9, 704.0], [67.0, 704.0], [67.1, 704.0], [67.2, 704.0], [67.3, 704.0], [67.4, 706.0], [67.5, 706.0], [67.6, 706.0], [67.7, 706.0], [67.8, 706.0], [67.9, 706.0], [68.0, 706.0], [68.1, 712.0], [68.2, 712.0], [68.3, 712.0], [68.4, 712.0], [68.5, 712.0], [68.6, 712.0], [68.7, 712.0], [68.8, 714.0], [68.9, 714.0], [69.0, 714.0], [69.1, 714.0], [69.2, 714.0], [69.3, 714.0], [69.4, 714.0], [69.5, 714.0], [69.6, 722.0], [69.7, 722.0], [69.8, 722.0], [69.9, 722.0], [70.0, 722.0], [70.1, 722.0], [70.2, 722.0], [70.3, 725.0], [70.4, 725.0], [70.5, 725.0], [70.6, 725.0], [70.7, 725.0], [70.8, 725.0], [70.9, 725.0], [71.0, 726.0], [71.1, 726.0], [71.2, 726.0], [71.3, 726.0], [71.4, 726.0], [71.5, 726.0], [71.6, 726.0], [71.7, 728.0], [71.8, 728.0], [71.9, 728.0], [72.0, 728.0], [72.1, 728.0], [72.2, 728.0], [72.3, 728.0], [72.4, 755.0], [72.5, 755.0], [72.6, 755.0], [72.7, 755.0], [72.8, 755.0], [72.9, 755.0], [73.0, 755.0], [73.1, 759.0], [73.2, 759.0], [73.3, 759.0], [73.4, 759.0], [73.5, 759.0], [73.6, 759.0], [73.7, 759.0], [73.8, 763.0], [73.9, 763.0], [74.0, 763.0], [74.1, 763.0], [74.2, 763.0], [74.3, 763.0], [74.4, 763.0], [74.5, 764.0], [74.6, 764.0], [74.7, 764.0], [74.8, 764.0], [74.9, 764.0], [75.0, 764.0], [75.1, 764.0], [75.2, 767.0], [75.3, 767.0], [75.4, 767.0], [75.5, 767.0], [75.6, 767.0], [75.7, 767.0], [75.8, 767.0], [75.9, 771.0], [76.0, 771.0], [76.1, 771.0], [76.2, 771.0], [76.3, 771.0], [76.4, 771.0], [76.5, 771.0], [76.6, 781.0], [76.7, 781.0], [76.8, 781.0], [76.9, 781.0], [77.0, 781.0], [77.1, 781.0], [77.2, 781.0], [77.3, 781.0], [77.4, 782.0], [77.5, 782.0], [77.6, 782.0], [77.7, 782.0], [77.8, 782.0], [77.9, 782.0], [78.0, 782.0], [78.1, 782.0], [78.2, 782.0], [78.3, 782.0], [78.4, 782.0], [78.5, 782.0], [78.6, 782.0], [78.7, 782.0], [78.8, 783.0], [78.9, 783.0], [79.0, 783.0], [79.1, 783.0], [79.2, 783.0], [79.3, 783.0], [79.4, 783.0], [79.5, 794.0], [79.6, 794.0], [79.7, 794.0], [79.8, 794.0], [79.9, 794.0], [80.0, 794.0], [80.1, 794.0], [80.2, 797.0], [80.3, 797.0], [80.4, 797.0], [80.5, 797.0], [80.6, 797.0], [80.7, 797.0], [80.8, 797.0], [80.9, 803.0], [81.0, 803.0], [81.1, 803.0], [81.2, 803.0], [81.3, 803.0], [81.4, 803.0], [81.5, 803.0], [81.6, 805.0], [81.7, 805.0], [81.8, 805.0], [81.9, 805.0], [82.0, 805.0], [82.1, 805.0], [82.2, 805.0], [82.3, 830.0], [82.4, 830.0], [82.5, 830.0], [82.6, 830.0], [82.7, 830.0], [82.8, 830.0], [82.9, 830.0], [83.0, 836.0], [83.1, 836.0], [83.2, 836.0], [83.3, 836.0], [83.4, 836.0], [83.5, 836.0], [83.6, 836.0], [83.7, 836.0], [83.8, 836.0], [83.9, 836.0], [84.0, 836.0], [84.1, 836.0], [84.2, 836.0], [84.3, 836.0], [84.4, 843.0], [84.5, 843.0], [84.6, 843.0], [84.7, 843.0], [84.8, 843.0], [84.9, 843.0], [85.0, 843.0], [85.1, 843.0], [85.2, 864.0], [85.3, 864.0], [85.4, 864.0], [85.5, 864.0], [85.6, 864.0], [85.7, 864.0], [85.8, 864.0], [85.9, 864.0], [86.0, 864.0], [86.1, 864.0], [86.2, 864.0], [86.3, 864.0], [86.4, 864.0], [86.5, 864.0], [86.6, 877.0], [86.7, 877.0], [86.8, 877.0], [86.9, 877.0], [87.0, 877.0], [87.1, 877.0], [87.2, 877.0], [87.3, 883.0], [87.4, 883.0], [87.5, 883.0], [87.6, 883.0], [87.7, 883.0], [87.8, 883.0], [87.9, 883.0], [88.0, 892.0], [88.1, 892.0], [88.2, 892.0], [88.3, 892.0], [88.4, 892.0], [88.5, 892.0], [88.6, 892.0], [88.7, 899.0], [88.8, 899.0], [88.9, 899.0], [89.0, 899.0], [89.1, 899.0], [89.2, 899.0], [89.3, 899.0], [89.4, 906.0], [89.5, 906.0], [89.6, 906.0], [89.7, 906.0], [89.8, 906.0], [89.9, 906.0], [90.0, 906.0], [90.1, 909.0], [90.2, 909.0], [90.3, 909.0], [90.4, 909.0], [90.5, 909.0], [90.6, 909.0], [90.7, 909.0], [90.8, 909.0], [90.9, 909.0], [91.0, 909.0], [91.1, 909.0], [91.2, 909.0], [91.3, 909.0], [91.4, 909.0], [91.5, 915.0], [91.6, 915.0], [91.7, 915.0], [91.8, 915.0], [91.9, 915.0], [92.0, 915.0], [92.1, 915.0], [92.2, 915.0], [92.3, 915.0], [92.4, 915.0], [92.5, 915.0], [92.6, 915.0], [92.7, 915.0], [92.8, 915.0], [92.9, 915.0], [93.0, 934.0], [93.1, 934.0], [93.2, 934.0], [93.3, 934.0], [93.4, 934.0], [93.5, 934.0], [93.6, 934.0], [93.7, 945.0], [93.8, 945.0], [93.9, 945.0], [94.0, 945.0], [94.1, 945.0], [94.2, 945.0], [94.3, 945.0], [94.4, 955.0], [94.5, 955.0], [94.6, 955.0], [94.7, 955.0], [94.8, 955.0], [94.9, 955.0], [95.0, 955.0], [95.1, 971.0], [95.2, 971.0], [95.3, 971.0], [95.4, 971.0], [95.5, 971.0], [95.6, 971.0], [95.7, 971.0], [95.8, 974.0], [95.9, 974.0], [96.0, 974.0], [96.1, 974.0], [96.2, 974.0], [96.3, 974.0], [96.4, 974.0], [96.5, 989.0], [96.6, 989.0], [96.7, 989.0], [96.8, 989.0], [96.9, 989.0], [97.0, 989.0], [97.1, 989.0], [97.2, 994.0], [97.3, 994.0], [97.4, 994.0], [97.5, 994.0], [97.6, 994.0], [97.7, 994.0], [97.8, 994.0], [97.9, 995.0], [98.0, 995.0], [98.1, 995.0], [98.2, 995.0], [98.3, 995.0], [98.4, 995.0], [98.5, 995.0], [98.6, 1000.0], [98.7, 1000.0], [98.8, 1000.0], [98.9, 1000.0], [99.0, 1000.0], [99.1, 1000.0], [99.2, 1000.0], [99.3, 1000.0], [99.4, 1000.0], [99.5, 1000.0], [99.6, 1000.0], [99.7, 1000.0], [99.8, 1000.0], [99.9, 1000.0], [100.0, 1000.0]], "isOverall": false, "label": "T01_Launch", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 30.0], [2.1, 30.0], [2.2, 30.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 36.0], [3.0, 44.0], [3.1, 44.0], [3.2, 44.0], [3.3, 44.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 52.0], [3.9, 52.0], [4.0, 52.0], [4.1, 52.0], [4.2, 52.0], [4.3, 52.0], [4.4, 52.0], [4.5, 78.0], [4.6, 78.0], [4.7, 78.0], [4.8, 78.0], [4.9, 78.0], [5.0, 78.0], [5.1, 78.0], [5.2, 85.0], [5.3, 85.0], [5.4, 85.0], [5.5, 85.0], [5.6, 85.0], [5.7, 85.0], [5.8, 85.0], [5.9, 85.0], [6.0, 90.0], [6.1, 90.0], [6.2, 90.0], [6.3, 90.0], [6.4, 90.0], [6.5, 90.0], [6.6, 90.0], [6.7, 111.0], [6.8, 111.0], [6.9, 111.0], [7.0, 111.0], [7.1, 111.0], [7.2, 111.0], [7.3, 111.0], [7.4, 111.0], [7.5, 137.0], [7.6, 137.0], [7.7, 137.0], [7.8, 137.0], [7.9, 137.0], [8.0, 137.0], [8.1, 137.0], [8.2, 138.0], [8.3, 138.0], [8.4, 138.0], [8.5, 138.0], [8.6, 138.0], [8.7, 138.0], [8.8, 138.0], [8.9, 175.0], [9.0, 175.0], [9.1, 175.0], [9.2, 175.0], [9.3, 175.0], [9.4, 175.0], [9.5, 175.0], [9.6, 175.0], [9.7, 180.0], [9.8, 180.0], [9.9, 180.0], [10.0, 180.0], [10.1, 180.0], [10.2, 180.0], [10.3, 180.0], [10.4, 193.0], [10.5, 193.0], [10.6, 193.0], [10.7, 193.0], [10.8, 193.0], [10.9, 193.0], [11.0, 193.0], [11.1, 193.0], [11.2, 200.0], [11.3, 200.0], [11.4, 200.0], [11.5, 200.0], [11.6, 200.0], [11.7, 200.0], [11.8, 200.0], [11.9, 207.0], [12.0, 207.0], [12.1, 207.0], [12.2, 207.0], [12.3, 207.0], [12.4, 207.0], [12.5, 207.0], [12.6, 209.0], [12.7, 209.0], [12.8, 209.0], [12.9, 209.0], [13.0, 209.0], [13.1, 209.0], [13.2, 209.0], [13.3, 209.0], [13.4, 217.0], [13.5, 217.0], [13.6, 217.0], [13.7, 217.0], [13.8, 217.0], [13.9, 217.0], [14.0, 217.0], [14.1, 217.0], [14.2, 217.0], [14.3, 217.0], [14.4, 217.0], [14.5, 217.0], [14.6, 217.0], [14.7, 217.0], [14.8, 217.0], [14.9, 226.0], [15.0, 226.0], [15.1, 226.0], [15.2, 226.0], [15.3, 226.0], [15.4, 226.0], [15.5, 226.0], [15.6, 230.0], [15.7, 230.0], [15.8, 230.0], [15.9, 230.0], [16.0, 230.0], [16.1, 230.0], [16.2, 230.0], [16.3, 230.0], [16.4, 230.0], [16.5, 230.0], [16.6, 230.0], [16.7, 230.0], [16.8, 230.0], [16.9, 230.0], [17.0, 230.0], [17.1, 250.0], [17.2, 250.0], [17.3, 250.0], [17.4, 250.0], [17.5, 250.0], [17.6, 250.0], [17.7, 250.0], [17.8, 251.0], [17.9, 251.0], [18.0, 251.0], [18.1, 251.0], [18.2, 251.0], [18.3, 251.0], [18.4, 251.0], [18.5, 251.0], [18.6, 251.0], [18.7, 251.0], [18.8, 251.0], [18.9, 251.0], [19.0, 251.0], [19.1, 251.0], [19.2, 251.0], [19.3, 256.0], [19.4, 256.0], [19.5, 256.0], [19.6, 256.0], [19.7, 256.0], [19.8, 256.0], [19.9, 256.0], [20.0, 258.0], [20.1, 258.0], [20.2, 258.0], [20.3, 258.0], [20.4, 258.0], [20.5, 258.0], [20.6, 258.0], [20.7, 258.0], [20.8, 274.0], [20.9, 274.0], [21.0, 274.0], [21.1, 274.0], [21.2, 274.0], [21.3, 274.0], [21.4, 274.0], [21.5, 283.0], [21.6, 283.0], [21.7, 283.0], [21.8, 283.0], [21.9, 283.0], [22.0, 283.0], [22.1, 283.0], [22.2, 283.0], [22.3, 308.0], [22.4, 308.0], [22.5, 308.0], [22.6, 308.0], [22.7, 308.0], [22.8, 308.0], [22.9, 308.0], [23.0, 310.0], [23.1, 310.0], [23.2, 310.0], [23.3, 310.0], [23.4, 310.0], [23.5, 310.0], [23.6, 310.0], [23.7, 310.0], [23.8, 311.0], [23.9, 311.0], [24.0, 311.0], [24.1, 311.0], [24.2, 311.0], [24.3, 311.0], [24.4, 311.0], [24.5, 314.0], [24.6, 314.0], [24.7, 314.0], [24.8, 314.0], [24.9, 314.0], [25.0, 314.0], [25.1, 314.0], [25.2, 319.0], [25.3, 319.0], [25.4, 319.0], [25.5, 319.0], [25.6, 319.0], [25.7, 319.0], [25.8, 319.0], [25.9, 319.0], [26.0, 326.0], [26.1, 326.0], [26.2, 326.0], [26.3, 326.0], [26.4, 326.0], [26.5, 326.0], [26.6, 326.0], [26.7, 335.0], [26.8, 335.0], [26.9, 335.0], [27.0, 335.0], [27.1, 335.0], [27.2, 335.0], [27.3, 335.0], [27.4, 335.0], [27.5, 340.0], [27.6, 340.0], [27.7, 340.0], [27.8, 340.0], [27.9, 340.0], [28.0, 340.0], [28.1, 340.0], [28.2, 342.0], [28.3, 342.0], [28.4, 342.0], [28.5, 342.0], [28.6, 342.0], [28.7, 342.0], [28.8, 342.0], [28.9, 345.0], [29.0, 345.0], [29.1, 345.0], [29.2, 345.0], [29.3, 345.0], [29.4, 345.0], [29.5, 345.0], [29.6, 345.0], [29.7, 352.0], [29.8, 352.0], [29.9, 352.0], [30.0, 352.0], [30.1, 352.0], [30.2, 352.0], [30.3, 352.0], [30.4, 374.0], [30.5, 374.0], [30.6, 374.0], [30.7, 374.0], [30.8, 374.0], [30.9, 374.0], [31.0, 374.0], [31.1, 374.0], [31.2, 382.0], [31.3, 382.0], [31.4, 382.0], [31.5, 382.0], [31.6, 382.0], [31.7, 382.0], [31.8, 382.0], [31.9, 395.0], [32.0, 395.0], [32.1, 395.0], [32.2, 395.0], [32.3, 395.0], [32.4, 395.0], [32.5, 395.0], [32.6, 401.0], [32.7, 401.0], [32.8, 401.0], [32.9, 401.0], [33.0, 401.0], [33.1, 401.0], [33.2, 401.0], [33.3, 401.0], [33.4, 414.0], [33.5, 414.0], [33.6, 414.0], [33.7, 414.0], [33.8, 414.0], [33.9, 414.0], [34.0, 414.0], [34.1, 423.0], [34.2, 423.0], [34.3, 423.0], [34.4, 423.0], [34.5, 423.0], [34.6, 423.0], [34.7, 423.0], [34.8, 423.0], [34.9, 429.0], [35.0, 429.0], [35.1, 429.0], [35.2, 429.0], [35.3, 429.0], [35.4, 429.0], [35.5, 429.0], [35.6, 436.0], [35.7, 436.0], [35.8, 436.0], [35.9, 436.0], [36.0, 436.0], [36.1, 436.0], [36.2, 436.0], [36.3, 440.0], [36.4, 440.0], [36.5, 440.0], [36.6, 440.0], [36.7, 440.0], [36.8, 440.0], [36.9, 440.0], [37.0, 440.0], [37.1, 440.0], [37.2, 440.0], [37.3, 440.0], [37.4, 440.0], [37.5, 440.0], [37.6, 440.0], [37.7, 440.0], [37.8, 446.0], [37.9, 446.0], [38.0, 446.0], [38.1, 446.0], [38.2, 446.0], [38.3, 446.0], [38.4, 446.0], [38.5, 446.0], [38.6, 463.0], [38.7, 463.0], [38.8, 463.0], [38.9, 463.0], [39.0, 463.0], [39.1, 463.0], [39.2, 463.0], [39.3, 463.0], [39.4, 463.0], [39.5, 463.0], [39.6, 463.0], [39.7, 463.0], [39.8, 463.0], [39.9, 463.0], [40.0, 464.0], [40.1, 464.0], [40.2, 464.0], [40.3, 464.0], [40.4, 464.0], [40.5, 464.0], [40.6, 464.0], [40.7, 464.0], [40.8, 465.0], [40.9, 465.0], [41.0, 465.0], [41.1, 465.0], [41.2, 465.0], [41.3, 465.0], [41.4, 465.0], [41.5, 470.0], [41.6, 470.0], [41.7, 470.0], [41.8, 470.0], [41.9, 470.0], [42.0, 470.0], [42.1, 470.0], [42.2, 470.0], [42.3, 480.0], [42.4, 480.0], [42.5, 480.0], [42.6, 480.0], [42.7, 480.0], [42.8, 480.0], [42.9, 480.0], [43.0, 492.0], [43.1, 492.0], [43.2, 492.0], [43.3, 492.0], [43.4, 492.0], [43.5, 492.0], [43.6, 492.0], [43.7, 492.0], [43.8, 498.0], [43.9, 498.0], [44.0, 498.0], [44.1, 498.0], [44.2, 498.0], [44.3, 498.0], [44.4, 498.0], [44.5, 501.0], [44.6, 501.0], [44.7, 501.0], [44.8, 501.0], [44.9, 501.0], [45.0, 501.0], [45.1, 501.0], [45.2, 501.0], [45.3, 501.0], [45.4, 501.0], [45.5, 501.0], [45.6, 501.0], [45.7, 501.0], [45.8, 501.0], [45.9, 501.0], [46.0, 507.0], [46.1, 507.0], [46.2, 507.0], [46.3, 507.0], [46.4, 507.0], [46.5, 507.0], [46.6, 507.0], [46.7, 507.0], [46.8, 507.0], [46.9, 507.0], [47.0, 507.0], [47.1, 507.0], [47.2, 507.0], [47.3, 507.0], [47.4, 507.0], [47.5, 523.0], [47.6, 523.0], [47.7, 523.0], [47.8, 523.0], [47.9, 523.0], [48.0, 523.0], [48.1, 523.0], [48.2, 538.0], [48.3, 538.0], [48.4, 538.0], [48.5, 538.0], [48.6, 538.0], [48.7, 538.0], [48.8, 538.0], [48.9, 539.0], [49.0, 539.0], [49.1, 539.0], [49.2, 539.0], [49.3, 539.0], [49.4, 539.0], [49.5, 539.0], [49.6, 539.0], [49.7, 541.0], [49.8, 541.0], [49.9, 541.0], [50.0, 541.0], [50.1, 541.0], [50.2, 541.0], [50.3, 541.0], [50.4, 548.0], [50.5, 548.0], [50.6, 548.0], [50.7, 548.0], [50.8, 548.0], [50.9, 548.0], [51.0, 548.0], [51.1, 548.0], [51.2, 555.0], [51.3, 555.0], [51.4, 555.0], [51.5, 555.0], [51.6, 555.0], [51.7, 555.0], [51.8, 555.0], [51.9, 571.0], [52.0, 571.0], [52.1, 571.0], [52.2, 571.0], [52.3, 571.0], [52.4, 571.0], [52.5, 571.0], [52.6, 576.0], [52.7, 576.0], [52.8, 576.0], [52.9, 576.0], [53.0, 576.0], [53.1, 576.0], [53.2, 576.0], [53.3, 576.0], [53.4, 579.0], [53.5, 579.0], [53.6, 579.0], [53.7, 579.0], [53.8, 579.0], [53.9, 579.0], [54.0, 579.0], [54.1, 579.0], [54.2, 579.0], [54.3, 579.0], [54.4, 579.0], [54.5, 579.0], [54.6, 579.0], [54.7, 579.0], [54.8, 579.0], [54.9, 582.0], [55.0, 582.0], [55.1, 582.0], [55.2, 582.0], [55.3, 582.0], [55.4, 582.0], [55.5, 582.0], [55.6, 591.0], [55.7, 591.0], [55.8, 591.0], [55.9, 591.0], [56.0, 591.0], [56.1, 591.0], [56.2, 591.0], [56.3, 606.0], [56.4, 606.0], [56.5, 606.0], [56.6, 606.0], [56.7, 606.0], [56.8, 606.0], [56.9, 606.0], [57.0, 606.0], [57.1, 607.0], [57.2, 607.0], [57.3, 607.0], [57.4, 607.0], [57.5, 607.0], [57.6, 607.0], [57.7, 607.0], [57.8, 607.0], [57.9, 607.0], [58.0, 607.0], [58.1, 607.0], [58.2, 607.0], [58.3, 607.0], [58.4, 607.0], [58.5, 607.0], [58.6, 608.0], [58.7, 608.0], [58.8, 608.0], [58.9, 608.0], [59.0, 608.0], [59.1, 608.0], [59.2, 608.0], [59.3, 613.0], [59.4, 613.0], [59.5, 613.0], [59.6, 613.0], [59.7, 613.0], [59.8, 613.0], [59.9, 613.0], [60.0, 614.0], [60.1, 614.0], [60.2, 614.0], [60.3, 614.0], [60.4, 614.0], [60.5, 614.0], [60.6, 614.0], [60.7, 614.0], [60.8, 615.0], [60.9, 615.0], [61.0, 615.0], [61.1, 615.0], [61.2, 615.0], [61.3, 615.0], [61.4, 615.0], [61.5, 617.0], [61.6, 617.0], [61.7, 617.0], [61.8, 617.0], [61.9, 617.0], [62.0, 617.0], [62.1, 617.0], [62.2, 617.0], [62.3, 630.0], [62.4, 630.0], [62.5, 630.0], [62.6, 630.0], [62.7, 630.0], [62.8, 630.0], [62.9, 630.0], [63.0, 634.0], [63.1, 634.0], [63.2, 634.0], [63.3, 634.0], [63.4, 634.0], [63.5, 634.0], [63.6, 634.0], [63.7, 634.0], [63.8, 635.0], [63.9, 635.0], [64.0, 635.0], [64.1, 635.0], [64.2, 635.0], [64.3, 635.0], [64.4, 635.0], [64.5, 635.0], [64.6, 635.0], [64.7, 635.0], [64.8, 635.0], [64.9, 635.0], [65.0, 635.0], [65.1, 635.0], [65.2, 644.0], [65.3, 644.0], [65.4, 644.0], [65.5, 644.0], [65.6, 644.0], [65.7, 644.0], [65.8, 644.0], [65.9, 644.0], [66.0, 644.0], [66.1, 644.0], [66.2, 644.0], [66.3, 644.0], [66.4, 644.0], [66.5, 644.0], [66.6, 644.0], [66.7, 646.0], [66.8, 646.0], [66.9, 646.0], [67.0, 646.0], [67.1, 646.0], [67.2, 646.0], [67.3, 646.0], [67.4, 646.0], [67.5, 647.0], [67.6, 647.0], [67.7, 647.0], [67.8, 647.0], [67.9, 647.0], [68.0, 647.0], [68.1, 647.0], [68.2, 649.0], [68.3, 649.0], [68.4, 649.0], [68.5, 649.0], [68.6, 649.0], [68.7, 649.0], [68.8, 649.0], [68.9, 667.0], [69.0, 667.0], [69.1, 667.0], [69.2, 667.0], [69.3, 667.0], [69.4, 667.0], [69.5, 667.0], [69.6, 667.0], [69.7, 670.0], [69.8, 670.0], [69.9, 670.0], [70.0, 670.0], [70.1, 670.0], [70.2, 670.0], [70.3, 670.0], [70.4, 671.0], [70.5, 671.0], [70.6, 671.0], [70.7, 671.0], [70.8, 671.0], [70.9, 671.0], [71.0, 671.0], [71.1, 671.0], [71.2, 674.0], [71.3, 674.0], [71.4, 674.0], [71.5, 674.0], [71.6, 674.0], [71.7, 674.0], [71.8, 674.0], [71.9, 675.0], [72.0, 675.0], [72.1, 675.0], [72.2, 675.0], [72.3, 675.0], [72.4, 675.0], [72.5, 675.0], [72.6, 676.0], [72.7, 676.0], [72.8, 676.0], [72.9, 676.0], [73.0, 676.0], [73.1, 676.0], [73.2, 676.0], [73.3, 676.0], [73.4, 676.0], [73.5, 676.0], [73.6, 676.0], [73.7, 676.0], [73.8, 676.0], [73.9, 676.0], [74.0, 676.0], [74.1, 682.0], [74.2, 682.0], [74.3, 682.0], [74.4, 682.0], [74.5, 682.0], [74.6, 682.0], [74.7, 682.0], [74.8, 682.0], [74.9, 683.0], [75.0, 683.0], [75.1, 683.0], [75.2, 683.0], [75.3, 683.0], [75.4, 683.0], [75.5, 683.0], [75.6, 688.0], [75.7, 688.0], [75.8, 688.0], [75.9, 688.0], [76.0, 688.0], [76.1, 688.0], [76.2, 688.0], [76.3, 714.0], [76.4, 714.0], [76.5, 714.0], [76.6, 714.0], [76.7, 714.0], [76.8, 714.0], [76.9, 714.0], [77.0, 714.0], [77.1, 732.0], [77.2, 732.0], [77.3, 732.0], [77.4, 732.0], [77.5, 732.0], [77.6, 732.0], [77.7, 732.0], [77.8, 732.0], [77.9, 732.0], [78.0, 732.0], [78.1, 732.0], [78.2, 732.0], [78.3, 732.0], [78.4, 732.0], [78.5, 732.0], [78.6, 736.0], [78.7, 736.0], [78.8, 736.0], [78.9, 736.0], [79.0, 736.0], [79.1, 736.0], [79.2, 736.0], [79.3, 744.0], [79.4, 744.0], [79.5, 744.0], [79.6, 744.0], [79.7, 744.0], [79.8, 744.0], [79.9, 744.0], [80.0, 744.0], [80.1, 750.0], [80.2, 750.0], [80.3, 750.0], [80.4, 750.0], [80.5, 750.0], [80.6, 750.0], [80.7, 750.0], [80.8, 777.0], [80.9, 777.0], [81.0, 777.0], [81.1, 777.0], [81.2, 777.0], [81.3, 777.0], [81.4, 777.0], [81.5, 780.0], [81.6, 780.0], [81.7, 780.0], [81.8, 780.0], [81.9, 780.0], [82.0, 780.0], [82.1, 780.0], [82.2, 780.0], [82.3, 783.0], [82.4, 783.0], [82.5, 783.0], [82.6, 783.0], [82.7, 783.0], [82.8, 783.0], [82.9, 783.0], [83.0, 794.0], [83.1, 794.0], [83.2, 794.0], [83.3, 794.0], [83.4, 794.0], [83.5, 794.0], [83.6, 794.0], [83.7, 794.0], [83.8, 794.0], [83.9, 794.0], [84.0, 794.0], [84.1, 794.0], [84.2, 794.0], [84.3, 794.0], [84.4, 794.0], [84.5, 796.0], [84.6, 796.0], [84.7, 796.0], [84.8, 796.0], [84.9, 796.0], [85.0, 796.0], [85.1, 796.0], [85.2, 817.0], [85.3, 817.0], [85.4, 817.0], [85.5, 817.0], [85.6, 817.0], [85.7, 817.0], [85.8, 817.0], [85.9, 817.0], [86.0, 825.0], [86.1, 825.0], [86.2, 825.0], [86.3, 825.0], [86.4, 825.0], [86.5, 825.0], [86.6, 825.0], [86.7, 826.0], [86.8, 826.0], [86.9, 826.0], [87.0, 826.0], [87.1, 826.0], [87.2, 826.0], [87.3, 826.0], [87.4, 826.0], [87.5, 827.0], [87.6, 827.0], [87.7, 827.0], [87.8, 827.0], [87.9, 827.0], [88.0, 827.0], [88.1, 827.0], [88.2, 840.0], [88.3, 840.0], [88.4, 840.0], [88.5, 840.0], [88.6, 840.0], [88.7, 840.0], [88.8, 840.0], [88.9, 873.0], [89.0, 873.0], [89.1, 873.0], [89.2, 873.0], [89.3, 873.0], [89.4, 873.0], [89.5, 873.0], [89.6, 873.0], [89.7, 892.0], [89.8, 892.0], [89.9, 892.0], [90.0, 892.0], [90.1, 892.0], [90.2, 892.0], [90.3, 892.0], [90.4, 902.0], [90.5, 902.0], [90.6, 902.0], [90.7, 902.0], [90.8, 902.0], [90.9, 902.0], [91.0, 902.0], [91.1, 902.0], [91.2, 912.0], [91.3, 912.0], [91.4, 912.0], [91.5, 912.0], [91.6, 912.0], [91.7, 912.0], [91.8, 912.0], [91.9, 914.0], [92.0, 914.0], [92.1, 914.0], [92.2, 914.0], [92.3, 914.0], [92.4, 914.0], [92.5, 914.0], [92.6, 921.0], [92.7, 921.0], [92.8, 921.0], [92.9, 921.0], [93.0, 921.0], [93.1, 921.0], [93.2, 921.0], [93.3, 921.0], [93.4, 921.0], [93.5, 921.0], [93.6, 921.0], [93.7, 921.0], [93.8, 921.0], [93.9, 921.0], [94.0, 921.0], [94.1, 937.0], [94.2, 937.0], [94.3, 937.0], [94.4, 937.0], [94.5, 937.0], [94.6, 937.0], [94.7, 937.0], [94.8, 937.0], [94.9, 942.0], [95.0, 942.0], [95.1, 942.0], [95.2, 942.0], [95.3, 942.0], [95.4, 942.0], [95.5, 942.0], [95.6, 943.0], [95.7, 943.0], [95.8, 943.0], [95.9, 943.0], [96.0, 943.0], [96.1, 943.0], [96.2, 943.0], [96.3, 963.0], [96.4, 963.0], [96.5, 963.0], [96.6, 963.0], [96.7, 963.0], [96.8, 963.0], [96.9, 963.0], [97.0, 963.0], [97.1, 967.0], [97.2, 967.0], [97.3, 967.0], [97.4, 967.0], [97.5, 967.0], [97.6, 967.0], [97.7, 967.0], [97.8, 982.0], [97.9, 982.0], [98.0, 982.0], [98.1, 982.0], [98.2, 982.0], [98.3, 982.0], [98.4, 982.0], [98.5, 982.0], [98.6, 987.0], [98.7, 987.0], [98.8, 987.0], [98.9, 987.0], [99.0, 987.0], [99.1, 987.0], [99.2, 987.0], [99.3, 1000.0], [99.4, 1000.0], [99.5, 1000.0], [99.6, 1000.0], [99.7, 1000.0], [99.8, 1000.0], [99.9, 1000.0], [100.0, 1000.0]], "isOverall": false, "label": "T03_Search", "isController": false}, {"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 14.0], [0.5, 14.0], [0.6, 14.0], [0.7, 14.0], [0.8, 15.0], [0.9, 15.0], [1.0, 15.0], [1.1, 15.0], [1.2, 15.0], [1.3, 15.0], [1.4, 15.0], [1.5, 18.0], [1.6, 18.0], [1.7, 18.0], [1.8, 18.0], [1.9, 18.0], [2.0, 18.0], [2.1, 18.0], [2.2, 18.0], [2.3, 19.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 21.0], [3.1, 21.0], [3.2, 21.0], [3.3, 21.0], [3.4, 21.0], [3.5, 21.0], [3.6, 21.0], [3.7, 21.0], [3.8, 33.0], [3.9, 33.0], [4.0, 33.0], [4.1, 33.0], [4.2, 33.0], [4.3, 33.0], [4.4, 33.0], [4.5, 34.0], [4.6, 34.0], [4.7, 34.0], [4.8, 34.0], [4.9, 34.0], [5.0, 34.0], [5.1, 34.0], [5.2, 34.0], [5.3, 61.0], [5.4, 61.0], [5.5, 61.0], [5.6, 61.0], [5.7, 61.0], [5.8, 61.0], [5.9, 61.0], [6.0, 73.0], [6.1, 73.0], [6.2, 73.0], [6.3, 73.0], [6.4, 73.0], [6.5, 73.0], [6.6, 73.0], [6.7, 73.0], [6.8, 74.0], [6.9, 74.0], [7.0, 74.0], [7.1, 74.0], [7.2, 74.0], [7.3, 74.0], [7.4, 74.0], [7.5, 80.0], [7.6, 80.0], [7.7, 80.0], [7.8, 80.0], [7.9, 80.0], [8.0, 80.0], [8.1, 80.0], [8.2, 80.0], [8.3, 86.0], [8.4, 86.0], [8.5, 86.0], [8.6, 86.0], [8.7, 86.0], [8.8, 86.0], [8.9, 86.0], [9.0, 103.0], [9.1, 103.0], [9.2, 103.0], [9.3, 103.0], [9.4, 103.0], [9.5, 103.0], [9.6, 103.0], [9.7, 103.0], [9.8, 122.0], [9.9, 122.0], [10.0, 122.0], [10.1, 122.0], [10.2, 122.0], [10.3, 122.0], [10.4, 122.0], [10.5, 135.0], [10.6, 135.0], [10.7, 135.0], [10.8, 135.0], [10.9, 135.0], [11.0, 135.0], [11.1, 135.0], [11.2, 140.0], [11.3, 140.0], [11.4, 140.0], [11.5, 140.0], [11.6, 140.0], [11.7, 140.0], [11.8, 140.0], [11.9, 140.0], [12.0, 152.0], [12.1, 152.0], [12.2, 152.0], [12.3, 152.0], [12.4, 152.0], [12.5, 152.0], [12.6, 152.0], [12.7, 162.0], [12.8, 162.0], [12.9, 162.0], [13.0, 162.0], [13.1, 162.0], [13.2, 162.0], [13.3, 162.0], [13.4, 162.0], [13.5, 171.0], [13.6, 171.0], [13.7, 171.0], [13.8, 171.0], [13.9, 171.0], [14.0, 171.0], [14.1, 171.0], [14.2, 183.0], [14.3, 183.0], [14.4, 183.0], [14.5, 183.0], [14.6, 183.0], [14.7, 183.0], [14.8, 183.0], [14.9, 183.0], [15.0, 196.0], [15.1, 196.0], [15.2, 196.0], [15.3, 196.0], [15.4, 196.0], [15.5, 196.0], [15.6, 196.0], [15.7, 197.0], [15.8, 197.0], [15.9, 197.0], [16.0, 197.0], [16.1, 197.0], [16.2, 197.0], [16.3, 197.0], [16.4, 197.0], [16.5, 223.0], [16.6, 223.0], [16.7, 223.0], [16.8, 223.0], [16.9, 223.0], [17.0, 223.0], [17.1, 223.0], [17.2, 226.0], [17.3, 226.0], [17.4, 226.0], [17.5, 226.0], [17.6, 226.0], [17.7, 226.0], [17.8, 226.0], [17.9, 226.0], [18.0, 229.0], [18.1, 229.0], [18.2, 229.0], [18.3, 229.0], [18.4, 229.0], [18.5, 229.0], [18.6, 229.0], [18.7, 229.0], [18.8, 229.0], [18.9, 229.0], [19.0, 229.0], [19.1, 229.0], [19.2, 229.0], [19.3, 229.0], [19.4, 229.0], [19.5, 229.0], [19.6, 229.0], [19.7, 229.0], [19.8, 229.0], [19.9, 229.0], [20.0, 229.0], [20.1, 229.0], [20.2, 234.0], [20.3, 234.0], [20.4, 234.0], [20.5, 234.0], [20.6, 234.0], [20.7, 234.0], [20.8, 234.0], [20.9, 237.0], [21.0, 237.0], [21.1, 237.0], [21.2, 237.0], [21.3, 237.0], [21.4, 237.0], [21.5, 237.0], [21.6, 237.0], [21.7, 240.0], [21.8, 240.0], [21.9, 240.0], [22.0, 240.0], [22.1, 240.0], [22.2, 240.0], [22.3, 240.0], [22.4, 241.0], [22.5, 241.0], [22.6, 241.0], [22.7, 241.0], [22.8, 241.0], [22.9, 241.0], [23.0, 241.0], [23.1, 241.0], [23.2, 242.0], [23.3, 242.0], [23.4, 242.0], [23.5, 242.0], [23.6, 242.0], [23.7, 242.0], [23.8, 242.0], [23.9, 256.0], [24.0, 256.0], [24.1, 256.0], [24.2, 256.0], [24.3, 256.0], [24.4, 256.0], [24.5, 256.0], [24.6, 256.0], [24.7, 256.0], [24.8, 256.0], [24.9, 256.0], [25.0, 256.0], [25.1, 256.0], [25.2, 256.0], [25.3, 256.0], [25.4, 257.0], [25.5, 257.0], [25.6, 257.0], [25.7, 257.0], [25.8, 257.0], [25.9, 257.0], [26.0, 257.0], [26.1, 257.0], [26.2, 262.0], [26.3, 262.0], [26.4, 262.0], [26.5, 262.0], [26.6, 262.0], [26.7, 262.0], [26.8, 262.0], [26.9, 263.0], [27.0, 263.0], [27.1, 263.0], [27.2, 263.0], [27.3, 263.0], [27.4, 263.0], [27.5, 263.0], [27.6, 263.0], [27.7, 274.0], [27.8, 274.0], [27.9, 274.0], [28.0, 274.0], [28.1, 274.0], [28.2, 274.0], [28.3, 274.0], [28.4, 318.0], [28.5, 318.0], [28.6, 318.0], [28.7, 318.0], [28.8, 318.0], [28.9, 318.0], [29.0, 318.0], [29.1, 318.0], [29.2, 319.0], [29.3, 319.0], [29.4, 319.0], [29.5, 319.0], [29.6, 319.0], [29.7, 319.0], [29.8, 319.0], [29.9, 327.0], [30.0, 327.0], [30.1, 327.0], [30.2, 327.0], [30.3, 327.0], [30.4, 327.0], [30.5, 327.0], [30.6, 329.0], [30.7, 329.0], [30.8, 329.0], [30.9, 329.0], [31.0, 329.0], [31.1, 329.0], [31.2, 329.0], [31.3, 329.0], [31.4, 332.0], [31.5, 332.0], [31.6, 332.0], [31.7, 332.0], [31.8, 332.0], [31.9, 332.0], [32.0, 332.0], [32.1, 333.0], [32.2, 333.0], [32.3, 333.0], [32.4, 333.0], [32.5, 333.0], [32.6, 333.0], [32.7, 333.0], [32.8, 333.0], [32.9, 348.0], [33.0, 348.0], [33.1, 348.0], [33.2, 348.0], [33.3, 348.0], [33.4, 348.0], [33.5, 348.0], [33.6, 349.0], [33.7, 349.0], [33.8, 349.0], [33.9, 349.0], [34.0, 349.0], [34.1, 349.0], [34.2, 349.0], [34.3, 349.0], [34.4, 368.0], [34.5, 368.0], [34.6, 368.0], [34.7, 368.0], [34.8, 368.0], [34.9, 368.0], [35.0, 368.0], [35.1, 379.0], [35.2, 379.0], [35.3, 379.0], [35.4, 379.0], [35.5, 379.0], [35.6, 379.0], [35.7, 379.0], [35.8, 379.0], [35.9, 386.0], [36.0, 386.0], [36.1, 386.0], [36.2, 386.0], [36.3, 386.0], [36.4, 386.0], [36.5, 386.0], [36.6, 390.0], [36.7, 390.0], [36.8, 390.0], [36.9, 390.0], [37.0, 390.0], [37.1, 390.0], [37.2, 390.0], [37.3, 390.0], [37.4, 411.0], [37.5, 411.0], [37.6, 411.0], [37.7, 411.0], [37.8, 411.0], [37.9, 411.0], [38.0, 411.0], [38.1, 415.0], [38.2, 415.0], [38.3, 415.0], [38.4, 415.0], [38.5, 415.0], [38.6, 415.0], [38.7, 415.0], [38.8, 415.0], [38.9, 430.0], [39.0, 430.0], [39.1, 430.0], [39.2, 430.0], [39.3, 430.0], [39.4, 430.0], [39.5, 430.0], [39.6, 430.0], [39.7, 430.0], [39.8, 430.0], [39.9, 430.0], [40.0, 430.0], [40.1, 430.0], [40.2, 430.0], [40.3, 442.0], [40.4, 442.0], [40.5, 442.0], [40.6, 442.0], [40.7, 442.0], [40.8, 442.0], [40.9, 442.0], [41.0, 442.0], [41.1, 442.0], [41.2, 442.0], [41.3, 442.0], [41.4, 442.0], [41.5, 442.0], [41.6, 442.0], [41.7, 442.0], [41.8, 443.0], [41.9, 443.0], [42.0, 443.0], [42.1, 443.0], [42.2, 443.0], [42.3, 443.0], [42.4, 443.0], [42.5, 443.0], [42.6, 452.0], [42.7, 452.0], [42.8, 452.0], [42.9, 452.0], [43.0, 452.0], [43.1, 452.0], [43.2, 452.0], [43.3, 455.0], [43.4, 455.0], [43.5, 455.0], [43.6, 455.0], [43.7, 455.0], [43.8, 455.0], [43.9, 455.0], [44.0, 455.0], [44.1, 467.0], [44.2, 467.0], [44.3, 467.0], [44.4, 467.0], [44.5, 467.0], [44.6, 467.0], [44.7, 467.0], [44.8, 469.0], [44.9, 469.0], [45.0, 469.0], [45.1, 469.0], [45.2, 469.0], [45.3, 469.0], [45.4, 469.0], [45.5, 469.0], [45.6, 475.0], [45.7, 475.0], [45.8, 475.0], [45.9, 475.0], [46.0, 475.0], [46.1, 475.0], [46.2, 475.0], [46.3, 492.0], [46.4, 492.0], [46.5, 492.0], [46.6, 492.0], [46.7, 492.0], [46.8, 492.0], [46.9, 492.0], [47.0, 492.0], [47.1, 496.0], [47.2, 496.0], [47.3, 496.0], [47.4, 496.0], [47.5, 496.0], [47.6, 496.0], [47.7, 496.0], [47.8, 496.0], [47.9, 496.0], [48.0, 496.0], [48.1, 496.0], [48.2, 496.0], [48.3, 496.0], [48.4, 496.0], [48.5, 496.0], [48.6, 497.0], [48.7, 497.0], [48.8, 497.0], [48.9, 497.0], [49.0, 497.0], [49.1, 497.0], [49.2, 497.0], [49.3, 506.0], [49.4, 506.0], [49.5, 506.0], [49.6, 506.0], [49.7, 506.0], [49.8, 506.0], [49.9, 506.0], [50.0, 514.0], [50.1, 514.0], [50.2, 514.0], [50.3, 514.0], [50.4, 514.0], [50.5, 514.0], [50.6, 514.0], [50.7, 514.0], [50.8, 515.0], [50.9, 515.0], [51.0, 515.0], [51.1, 515.0], [51.2, 515.0], [51.3, 515.0], [51.4, 515.0], [51.5, 517.0], [51.6, 517.0], [51.7, 517.0], [51.8, 517.0], [51.9, 517.0], [52.0, 517.0], [52.1, 517.0], [52.2, 517.0], [52.3, 520.0], [52.4, 520.0], [52.5, 520.0], [52.6, 520.0], [52.7, 520.0], [52.8, 520.0], [52.9, 520.0], [53.0, 522.0], [53.1, 522.0], [53.2, 522.0], [53.3, 522.0], [53.4, 522.0], [53.5, 522.0], [53.6, 522.0], [53.7, 522.0], [53.8, 522.0], [53.9, 522.0], [54.0, 522.0], [54.1, 522.0], [54.2, 522.0], [54.3, 522.0], [54.4, 522.0], [54.5, 525.0], [54.6, 525.0], [54.7, 525.0], [54.8, 525.0], [54.9, 525.0], [55.0, 525.0], [55.1, 525.0], [55.2, 525.0], [55.3, 529.0], [55.4, 529.0], [55.5, 529.0], [55.6, 529.0], [55.7, 529.0], [55.8, 529.0], [55.9, 529.0], [56.0, 541.0], [56.1, 541.0], [56.2, 541.0], [56.3, 541.0], [56.4, 541.0], [56.5, 541.0], [56.6, 541.0], [56.7, 541.0], [56.8, 547.0], [56.9, 547.0], [57.0, 547.0], [57.1, 547.0], [57.2, 547.0], [57.3, 547.0], [57.4, 547.0], [57.5, 561.0], [57.6, 561.0], [57.7, 561.0], [57.8, 561.0], [57.9, 561.0], [58.0, 561.0], [58.1, 561.0], [58.2, 561.0], [58.3, 569.0], [58.4, 569.0], [58.5, 569.0], [58.6, 569.0], [58.7, 569.0], [58.8, 569.0], [58.9, 569.0], [59.0, 570.0], [59.1, 570.0], [59.2, 570.0], [59.3, 570.0], [59.4, 570.0], [59.5, 570.0], [59.6, 570.0], [59.7, 570.0], [59.8, 571.0], [59.9, 571.0], [60.0, 571.0], [60.1, 571.0], [60.2, 571.0], [60.3, 571.0], [60.4, 571.0], [60.5, 571.0], [60.6, 571.0], [60.7, 571.0], [60.8, 571.0], [60.9, 571.0], [61.0, 571.0], [61.1, 571.0], [61.2, 572.0], [61.3, 572.0], [61.4, 572.0], [61.5, 572.0], [61.6, 572.0], [61.7, 572.0], [61.8, 572.0], [61.9, 572.0], [62.0, 612.0], [62.1, 612.0], [62.2, 612.0], [62.3, 612.0], [62.4, 612.0], [62.5, 612.0], [62.6, 612.0], [62.7, 614.0], [62.8, 614.0], [62.9, 614.0], [63.0, 614.0], [63.1, 614.0], [63.2, 614.0], [63.3, 614.0], [63.4, 614.0], [63.5, 625.0], [63.6, 625.0], [63.7, 625.0], [63.8, 625.0], [63.9, 625.0], [64.0, 625.0], [64.1, 625.0], [64.2, 627.0], [64.3, 627.0], [64.4, 627.0], [64.5, 627.0], [64.6, 627.0], [64.7, 627.0], [64.8, 627.0], [64.9, 627.0], [65.0, 634.0], [65.1, 634.0], [65.2, 634.0], [65.3, 634.0], [65.4, 634.0], [65.5, 634.0], [65.6, 634.0], [65.7, 648.0], [65.8, 648.0], [65.9, 648.0], [66.0, 648.0], [66.1, 648.0], [66.2, 648.0], [66.3, 648.0], [66.4, 648.0], [66.5, 651.0], [66.6, 651.0], [66.7, 651.0], [66.8, 651.0], [66.9, 651.0], [67.0, 651.0], [67.1, 651.0], [67.2, 665.0], [67.3, 665.0], [67.4, 665.0], [67.5, 665.0], [67.6, 665.0], [67.7, 665.0], [67.8, 665.0], [67.9, 665.0], [68.0, 674.0], [68.1, 674.0], [68.2, 674.0], [68.3, 674.0], [68.4, 674.0], [68.5, 674.0], [68.6, 674.0], [68.7, 675.0], [68.8, 675.0], [68.9, 675.0], [69.0, 675.0], [69.1, 675.0], [69.2, 675.0], [69.3, 675.0], [69.4, 675.0], [69.5, 686.0], [69.6, 686.0], [69.7, 686.0], [69.8, 686.0], [69.9, 686.0], [70.0, 686.0], [70.1, 686.0], [70.2, 689.0], [70.3, 689.0], [70.4, 689.0], [70.5, 689.0], [70.6, 689.0], [70.7, 689.0], [70.8, 689.0], [70.9, 693.0], [71.0, 693.0], [71.1, 693.0], [71.2, 693.0], [71.3, 693.0], [71.4, 693.0], [71.5, 693.0], [71.6, 693.0], [71.7, 698.0], [71.8, 698.0], [71.9, 698.0], [72.0, 698.0], [72.1, 698.0], [72.2, 698.0], [72.3, 698.0], [72.4, 702.0], [72.5, 702.0], [72.6, 702.0], [72.7, 702.0], [72.8, 702.0], [72.9, 702.0], [73.0, 702.0], [73.1, 702.0], [73.2, 705.0], [73.3, 705.0], [73.4, 705.0], [73.5, 705.0], [73.6, 705.0], [73.7, 705.0], [73.8, 705.0], [73.9, 724.0], [74.0, 724.0], [74.1, 724.0], [74.2, 724.0], [74.3, 724.0], [74.4, 724.0], [74.5, 724.0], [74.6, 724.0], [74.7, 726.0], [74.8, 726.0], [74.9, 726.0], [75.0, 726.0], [75.1, 726.0], [75.2, 726.0], [75.3, 726.0], [75.4, 751.0], [75.5, 751.0], [75.6, 751.0], [75.7, 751.0], [75.8, 751.0], [75.9, 751.0], [76.0, 751.0], [76.1, 751.0], [76.2, 751.0], [76.3, 751.0], [76.4, 751.0], [76.5, 751.0], [76.6, 751.0], [76.7, 751.0], [76.8, 751.0], [76.9, 761.0], [77.0, 761.0], [77.1, 761.0], [77.2, 761.0], [77.3, 761.0], [77.4, 761.0], [77.5, 761.0], [77.6, 761.0], [77.7, 766.0], [77.8, 766.0], [77.9, 766.0], [78.0, 766.0], [78.1, 766.0], [78.2, 766.0], [78.3, 766.0], [78.4, 767.0], [78.5, 767.0], [78.6, 767.0], [78.7, 767.0], [78.8, 767.0], [78.9, 767.0], [79.0, 767.0], [79.1, 767.0], [79.2, 772.0], [79.3, 772.0], [79.4, 772.0], [79.5, 772.0], [79.6, 772.0], [79.7, 772.0], [79.8, 772.0], [79.9, 780.0], [80.0, 780.0], [80.1, 780.0], [80.2, 780.0], [80.3, 780.0], [80.4, 780.0], [80.5, 780.0], [80.6, 787.0], [80.7, 787.0], [80.8, 787.0], [80.9, 787.0], [81.0, 787.0], [81.1, 787.0], [81.2, 787.0], [81.3, 787.0], [81.4, 797.0], [81.5, 797.0], [81.6, 797.0], [81.7, 797.0], [81.8, 797.0], [81.9, 797.0], [82.0, 797.0], [82.1, 809.0], [82.2, 809.0], [82.3, 809.0], [82.4, 809.0], [82.5, 809.0], [82.6, 809.0], [82.7, 809.0], [82.8, 809.0], [82.9, 812.0], [83.0, 812.0], [83.1, 812.0], [83.2, 812.0], [83.3, 812.0], [83.4, 812.0], [83.5, 812.0], [83.6, 820.0], [83.7, 820.0], [83.8, 820.0], [83.9, 820.0], [84.0, 820.0], [84.1, 820.0], [84.2, 820.0], [84.3, 820.0], [84.4, 820.0], [84.5, 820.0], [84.6, 820.0], [84.7, 820.0], [84.8, 820.0], [84.9, 820.0], [85.0, 820.0], [85.1, 825.0], [85.2, 825.0], [85.3, 825.0], [85.4, 825.0], [85.5, 825.0], [85.6, 825.0], [85.7, 825.0], [85.8, 825.0], [85.9, 841.0], [86.0, 841.0], [86.1, 841.0], [86.2, 841.0], [86.3, 841.0], [86.4, 841.0], [86.5, 841.0], [86.6, 852.0], [86.7, 852.0], [86.8, 852.0], [86.9, 852.0], [87.0, 852.0], [87.1, 852.0], [87.2, 852.0], [87.3, 852.0], [87.4, 852.0], [87.5, 852.0], [87.6, 852.0], [87.7, 852.0], [87.8, 852.0], [87.9, 852.0], [88.0, 852.0], [88.1, 889.0], [88.2, 889.0], [88.3, 889.0], [88.4, 889.0], [88.5, 889.0], [88.6, 889.0], [88.7, 889.0], [88.8, 889.0], [88.9, 903.0], [89.0, 903.0], [89.1, 903.0], [89.2, 903.0], [89.3, 903.0], [89.4, 903.0], [89.5, 903.0], [89.6, 905.0], [89.7, 905.0], [89.8, 905.0], [89.9, 905.0], [90.0, 905.0], [90.1, 905.0], [90.2, 905.0], [90.3, 926.0], [90.4, 926.0], [90.5, 926.0], [90.6, 926.0], [90.7, 926.0], [90.8, 926.0], [90.9, 926.0], [91.0, 926.0], [91.1, 934.0], [91.2, 934.0], [91.3, 934.0], [91.4, 934.0], [91.5, 934.0], [91.6, 934.0], [91.7, 934.0], [91.8, 942.0], [91.9, 942.0], [92.0, 942.0], [92.1, 942.0], [92.2, 942.0], [92.3, 942.0], [92.4, 942.0], [92.5, 942.0], [92.6, 947.0], [92.7, 947.0], [92.8, 947.0], [92.9, 947.0], [93.0, 947.0], [93.1, 947.0], [93.2, 947.0], [93.3, 950.0], [93.4, 950.0], [93.5, 950.0], [93.6, 950.0], [93.7, 950.0], [93.8, 950.0], [93.9, 950.0], [94.0, 950.0], [94.1, 964.0], [94.2, 964.0], [94.3, 964.0], [94.4, 964.0], [94.5, 964.0], [94.6, 964.0], [94.7, 964.0], [94.8, 965.0], [94.9, 965.0], [95.0, 965.0], [95.1, 965.0], [95.2, 965.0], [95.3, 965.0], [95.4, 965.0], [95.5, 965.0], [95.6, 974.0], [95.7, 974.0], [95.8, 974.0], [95.9, 974.0], [96.0, 974.0], [96.1, 974.0], [96.2, 974.0], [96.3, 975.0], [96.4, 975.0], [96.5, 975.0], [96.6, 975.0], [96.7, 975.0], [96.8, 975.0], [96.9, 975.0], [97.0, 975.0], [97.1, 978.0], [97.2, 978.0], [97.3, 978.0], [97.4, 978.0], [97.5, 978.0], [97.6, 978.0], [97.7, 978.0], [97.8, 986.0], [97.9, 986.0], [98.0, 986.0], [98.1, 986.0], [98.2, 986.0], [98.3, 986.0], [98.4, 986.0], [98.5, 986.0], [98.6, 994.0], [98.7, 994.0], [98.8, 994.0], [98.9, 994.0], [99.0, 994.0], [99.1, 994.0], [99.2, 994.0], [99.3, 1001.0], [99.4, 1001.0], [99.5, 1001.0], [99.6, 1001.0], [99.7, 1001.0], [99.8, 1001.0], [99.9, 1001.0], [100.0, 1001.0]], "isOverall": false, "label": "T04_Checkout", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27.0, "series": [{"data": [[0.0, 12.0], [600.0, 17.0], [300.0, 12.0], [700.0, 8.0], [400.0, 19.0], [100.0, 13.0], [800.0, 17.0], [200.0, 15.0], [900.0, 13.0], [500.0, 11.0]], "isOverall": false, "label": "T02_Load", "isController": false}, {"data": [[0.0, 8.0], [300.0, 12.0], [600.0, 13.0], [700.0, 20.0], [200.0, 11.0], [100.0, 20.0], [400.0, 17.0], [800.0, 12.0], [900.0, 13.0], [1000.0, 2.0], [500.0, 13.0]], "isOverall": false, "label": "T01_Launch", "isController": false}, {"data": [[0.0, 9.0], [300.0, 14.0], [600.0, 27.0], [700.0, 12.0], [200.0, 15.0], [800.0, 7.0], [400.0, 16.0], [100.0, 6.0], [900.0, 12.0], [500.0, 16.0], [1000.0, 1.0]], "isOverall": false, "label": "T03_Search", "isController": false}, {"data": [[0.0, 12.0], [300.0, 12.0], [600.0, 14.0], [700.0, 13.0], [800.0, 9.0], [100.0, 10.0], [400.0, 16.0], [200.0, 16.0], [900.0, 14.0], [500.0, 17.0], [1000.0, 1.0]], "isOverall": false, "label": "T04_Checkout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 154.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 225.0, "series": [{"data": [[0.0, 154.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 168.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 225.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.628884826325399, "minX": 1.74394116E12, "maxY": 9.628884826325399, "series": [{"data": [[1.74394116E12, 9.628884826325399]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74394116E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.0, "maxY": 983.0, "series": [{"data": [[4.0, 239.5], [8.0, 983.0], [2.0, 900.0], [9.0, 307.6666666666667], [10.0, 509.08130081300834], [3.0, 581.6666666666666], [6.0, 878.0], [7.0, 288.6666666666667]], "isOverall": false, "label": "T02_Load", "isController": false}, {"data": [[9.569343065693436, 506.5036496350365]], "isOverall": false, "label": "T02_Load-Aggregated", "isController": false}, {"data": [[2.0, 570.5], [4.0, 141.0], [8.0, 398.2], [1.0, 722.0], [9.0, 496.0], [10.0, 529.9837398373984], [3.0, 272.0], [6.0, 407.66666666666663], [7.0, 773.5]], "isOverall": false, "label": "T01_Launch", "isController": false}, {"data": [[9.475177304964541, 520.269503546099]], "isOverall": false, "label": "T01_Launch-Aggregated", "isController": false}, {"data": [[4.0, 502.5], [8.0, 704.0], [9.0, 817.0], [5.0, 647.0], [10.0, 518.2080000000001], [7.0, 36.0]], "isOverall": false, "label": "T03_Search", "isController": false}, {"data": [[9.711111111111109, 521.4666666666668]], "isOverall": false, "label": "T03_Search-Aggregated", "isController": false}, {"data": [[4.0, 21.0], [8.0, 102.5], [9.0, 702.0], [5.0, 420.5], [10.0, 503.8079999999997], [6.0, 820.0], [7.0, 964.0]], "isOverall": false, "label": "T04_Checkout", "isController": false}, {"data": [[9.768656716417912, 503.67910447761204]], "isOverall": false, "label": "T04_Checkout-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 10.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.74394116E12, "maxY": 1211.6333333333334, "series": [{"data": [[1.74394116E12, 1211.6333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74394116E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74394116E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 503.67910447761204, "minX": 1.74394116E12, "maxY": 521.4666666666668, "series": [{"data": [[1.74394116E12, 506.5036496350365]], "isOverall": false, "label": "T02_Load", "isController": false}, {"data": [[1.74394116E12, 520.269503546099]], "isOverall": false, "label": "T01_Launch", "isController": false}, {"data": [[1.74394116E12, 521.4666666666668]], "isOverall": false, "label": "T03_Search", "isController": false}, {"data": [[1.74394116E12, 503.67910447761204]], "isOverall": false, "label": "T04_Checkout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74394116E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 44.48148148148149, "minX": 1.74394116E12, "maxY": 54.613138686131386, "series": [{"data": [[1.74394116E12, 54.613138686131386]], "isOverall": false, "label": "T02_Load", "isController": false}, {"data": [[1.74394116E12, 48.127659574468076]], "isOverall": false, "label": "T01_Launch", "isController": false}, {"data": [[1.74394116E12, 44.48148148148149]], "isOverall": false, "label": "T03_Search", "isController": false}, {"data": [[1.74394116E12, 49.58955223880596]], "isOverall": false, "label": "T04_Checkout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74394116E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74394116E12, "maxY": 4.9E-324, "series": [{"data": [[1.74394116E12, 0.0]], "isOverall": false, "label": "T02_Load", "isController": false}, {"data": [[1.74394116E12, 0.0]], "isOverall": false, "label": "T01_Launch", "isController": false}, {"data": [[1.74394116E12, 0.0]], "isOverall": false, "label": "T03_Search", "isController": false}, {"data": [[1.74394116E12, 0.0]], "isOverall": false, "label": "T04_Checkout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74394116E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.74394116E12, "maxY": 1000.0, "series": [{"data": [[1.74394116E12, 1000.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74394116E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74394116E12, 891.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74394116E12, 998.8499999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74394116E12, 522.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.74394116E12, 958.3999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74394116E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 141.0, "minX": 2.0, "maxY": 864.0, "series": [{"data": [[2.0, 570.5], [10.0, 864.0], [11.0, 141.0], [14.0, 649.0], [15.0, 725.0], [16.0, 676.0], [17.0, 501.0], [18.0, 612.0], [19.0, 666.0], [20.0, 516.0], [21.0, 547.0], [22.0, 418.0], [23.0, 442.0], [6.0, 647.0], [29.0, 455.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10.0, 584.0], [11.0, 310.0], [14.0, 751.0], [15.0, 791.0], [16.0, 834.0], [17.0, 478.0], [18.0, 475.0], [19.0, 590.0], [20.0, 571.0], [21.0, 492.0], [22.0, 496.0], [23.0, 386.0], [6.0, 323.0], [29.0, 241.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 2.0, "maxY": 80.0, "series": [{"data": [[2.0, 39.0], [10.0, 23.0], [11.0, 3.0], [14.0, 18.0], [15.0, 45.0], [16.0, 65.5], [17.0, 42.0], [18.0, 56.0], [19.0, 58.0], [20.0, 58.0], [21.0, 45.0], [22.0, 54.0], [23.0, 44.0], [6.0, 30.0], [29.0, 52.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10.0, 48.0], [11.0, 23.0], [14.0, 56.0], [15.0, 62.5], [16.0, 77.0], [17.0, 66.5], [18.0, 28.0], [19.0, 50.0], [20.0, 58.0], [21.0, 55.0], [22.0, 43.0], [23.0, 38.0], [6.0, 80.0], [29.0, 46.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.116666666666667, "minX": 1.74394116E12, "maxY": 9.116666666666667, "series": [{"data": [[1.74394116E12, 9.116666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74394116E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.74394116E12, "maxY": 0.48333333333333334, "series": [{"data": [[1.74394116E12, 0.36666666666666664]], "isOverall": false, "label": "101", "isController": false}, {"data": [[1.74394116E12, 0.48333333333333334]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.74394116E12, 0.21666666666666667]], "isOverall": false, "label": "102", "isController": false}, {"data": [[1.74394116E12, 0.2833333333333333]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.74394116E12, 0.48333333333333334]], "isOverall": false, "label": "103", "isController": false}, {"data": [[1.74394116E12, 0.4]], "isOverall": false, "label": "202", "isController": false}, {"data": [[1.74394116E12, 0.31666666666666665]], "isOverall": false, "label": "203", "isController": false}, {"data": [[1.74394116E12, 0.3333333333333333]], "isOverall": false, "label": "104", "isController": false}, {"data": [[1.74394116E12, 0.38333333333333336]], "isOverall": false, "label": "401", "isController": false}, {"data": [[1.74394116E12, 0.25]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.74394116E12, 0.35]], "isOverall": false, "label": "402", "isController": false}, {"data": [[1.74394116E12, 0.25]], "isOverall": false, "label": "501", "isController": false}, {"data": [[1.74394116E12, 0.4166666666666667]], "isOverall": false, "label": "105", "isController": false}, {"data": [[1.74394116E12, 0.3333333333333333]], "isOverall": false, "label": "303", "isController": false}, {"data": [[1.74394116E12, 0.38333333333333336]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.74394116E12, 0.4166666666666667]], "isOverall": false, "label": "205", "isController": false}, {"data": [[1.74394116E12, 0.45]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.74394116E12, 0.26666666666666666]], "isOverall": false, "label": "304", "isController": false}, {"data": [[1.74394116E12, 0.38333333333333336]], "isOverall": false, "label": "403", "isController": false}, {"data": [[1.74394116E12, 0.38333333333333336]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.74394116E12, 0.4666666666666667]], "isOverall": false, "label": "404", "isController": false}, {"data": [[1.74394116E12, 0.4166666666666667]], "isOverall": false, "label": "305", "isController": false}, {"data": [[1.74394116E12, 0.36666666666666664]], "isOverall": false, "label": "504", "isController": false}, {"data": [[1.74394116E12, 0.4166666666666667]], "isOverall": false, "label": "405", "isController": false}, {"data": [[1.74394116E12, 0.3]], "isOverall": false, "label": "505", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74394116E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.74394116E12, "maxY": 1.4833333333333334, "series": [{"data": [[1.74394116E12, 1.4833333333333334]], "isOverall": false, "label": "T01_Launch-success", "isController": false}, {"data": [[1.74394116E12, 1.0166666666666666]], "isOverall": false, "label": "T02_Load-failure", "isController": false}, {"data": [[1.74394116E12, 0.9]], "isOverall": false, "label": "T03_Search-failure", "isController": false}, {"data": [[1.74394116E12, 1.35]], "isOverall": false, "label": "T03_Search-success", "isController": false}, {"data": [[1.74394116E12, 1.2666666666666666]], "isOverall": false, "label": "T02_Load-success", "isController": false}, {"data": [[1.74394116E12, 1.2666666666666666]], "isOverall": false, "label": "T04_Checkout-success", "isController": false}, {"data": [[1.74394116E12, 0.9666666666666667]], "isOverall": false, "label": "T04_Checkout-failure", "isController": false}, {"data": [[1.74394116E12, 0.8666666666666667]], "isOverall": false, "label": "T01_Launch-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74394116E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.75, "minX": 1.74394116E12, "maxY": 5.366666666666666, "series": [{"data": [[1.74394116E12, 5.366666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74394116E12, 3.75]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74394116E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

